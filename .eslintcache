[{"C:\\Users\\dumar\\marketplace\\src\\components\\Navbar.js":"1","C:\\Users\\dumar\\marketplace\\src\\components\\FilterBar.js":"2","C:\\Users\\dumar\\marketplace\\src\\App.js":"3","C:\\Users\\dumar\\marketplace\\src\\components\\HomePage.js":"4","C:\\Users\\dumar\\marketplace\\src\\components\\JobBoardComponent.js":"5","C:\\Users\\dumar\\marketplace\\src\\components\\SignIn.js":"6","C:\\Users\\dumar\\marketplace\\src\\components\\SignUp.js":"7","C:\\Users\\dumar\\marketplace\\src\\components\\JobPost.js":"8","C:\\Users\\dumar\\marketplace\\src\\components\\CreatePost.js":"9","C:\\Users\\dumar\\marketplace\\src\\components\\SignedInLinks.js":"10","C:\\Users\\dumar\\marketplace\\src\\components\\Home.js":"11","C:\\Users\\dumar\\marketplace\\src\\components\\SignedOutLinks.js":"12","C:\\Users\\dumar\\marketplace\\src\\index.js":"13","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\rootReducer.js":"14","C:\\Users\\dumar\\marketplace\\src\\config\\fbConfig.js":"15","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\authReducer.js":"16","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\postsReducer.js":"17","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\postsActions.js":"18","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\companiesReducer.js":"19","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\authActions.js":"20","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\categoriesReducer.js":"21","C:\\Users\\dumar\\marketplace\\src\\components\\LandingPage.js":"22","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\classificationsReducer.js":"23","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\technologiesReducer.js":"24","C:\\Users\\dumar\\marketplace\\src\\components\\MyPosts.js":"25","C:\\Users\\dumar\\marketplace\\src\\components\\EditPost.js":"26","C:\\Users\\dumar\\marketplace\\src\\components\\Profile.js":"27"},{"size":1916,"mtime":1612015098273,"results":"28","hashOfConfig":"29"},{"size":3765,"mtime":1612016144757,"results":"30","hashOfConfig":"29"},{"size":1542,"mtime":1611641362323,"results":"31","hashOfConfig":"29"},{"size":448,"mtime":1607779819607,"results":"32","hashOfConfig":"29"},{"size":5348,"mtime":1611735648871,"results":"33","hashOfConfig":"29"},{"size":3365,"mtime":1611419942779,"results":"34","hashOfConfig":"29"},{"size":5565,"mtime":1611420373537,"results":"35","hashOfConfig":"29"},{"size":9491,"mtime":1611729949611,"results":"36","hashOfConfig":"29"},{"size":13823,"mtime":1611693258534,"results":"37","hashOfConfig":"29"},{"size":6068,"mtime":1612041260951,"results":"38","hashOfConfig":"29"},{"size":5704,"mtime":1612043697801,"results":"39","hashOfConfig":"29"},{"size":955,"mtime":1609330258154,"results":"40","hashOfConfig":"29"},{"size":938,"mtime":1610818494195,"results":"41","hashOfConfig":"29"},{"size":808,"mtime":1611497065412,"results":"42","hashOfConfig":"29"},{"size":623,"mtime":1609704218727,"results":"43","hashOfConfig":"29"},{"size":1037,"mtime":1610816574402,"results":"44","hashOfConfig":"29"},{"size":1458,"mtime":1612021801405,"results":"45","hashOfConfig":"29"},{"size":5339,"mtime":1612045887183,"results":"46","hashOfConfig":"29"},{"size":176,"mtime":1610989759287,"results":"47","hashOfConfig":"29"},{"size":1918,"mtime":1611071215737,"results":"48","hashOfConfig":"29"},{"size":166,"mtime":1610986904324,"results":"49","hashOfConfig":"29"},{"size":4320,"mtime":1611426994334,"results":"50","hashOfConfig":"29"},{"size":181,"mtime":1611496996517,"results":"51","hashOfConfig":"29"},{"size":174,"mtime":1611497029422,"results":"52","hashOfConfig":"29"},{"size":1922,"mtime":1611737185190,"results":"53","hashOfConfig":"29"},{"size":15448,"mtime":1611784025453,"results":"54","hashOfConfig":"29"},{"size":9093,"mtime":1611646745082,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hi92i9",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},"C:\\Users\\dumar\\marketplace\\src\\components\\Navbar.js",["128","129","130","131","132","133"],"C:\\Users\\dumar\\marketplace\\src\\components\\FilterBar.js",[],"C:\\Users\\dumar\\marketplace\\src\\App.js",["134","135","136","137"],"import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport JobBoardComponent from './components/JobBoardComponent';\nimport HomePage from './components/HomePage';\nimport Navbar from './components/Navbar';\nimport FilterBar from './components/FilterBar';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport JobPost from './components/JobPost';\nimport CreatePost from './components/CreatePost';\nimport Home from './components/Home';\nimport Landing from './components/LandingPage';\nimport LandingPage from './components/LandingPage';\nimport MyPosts from './components/MyPosts';\nimport EditPost from './components/EditPost';\nimport Profile from './components/Profile';\n\nfunction App() {\n\n  return (\n    // <div className='App  w-full h-full'>\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"sticky top-0 ...\" >\n          <Navbar />\n        </div>\n        <Switch>\n          <Route exact path='/' component={LandingPage}/>\n          <Route path='/home' component={Home}/>\n          <Route path='/signin' component={SignIn}/>\n          <Route path='/signup'  component={SignUp}/>\n          <Route path='/myPosts' component={MyPosts}/>\n          <Route path='/editPost' component={EditPost}/>\n          <Route path='/profile' component={Profile} />\n          <Route path='/post/:id' component={JobPost}/>\n          <Route path='/createPost' component={CreatePost}/>\n        </Switch>\n      </div>  \n     </BrowserRouter>); \n  \n}\nexport default App;",["138","139"],"C:\\Users\\dumar\\marketplace\\src\\components\\HomePage.js",[],["140","141"],"C:\\Users\\dumar\\marketplace\\src\\components\\JobBoardComponent.js",["142","143","144"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignIn.js",["145"],"import React from 'react';\r\nimport ubbLogo from '../ubb.png';\r\nimport backG from '../header-wall.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/home' />;\r\n        return (\r\n            <div className=\"grid grid-cols-6 w-full h-full place-items-center bg-fixed  bg-center bg-cover bg-no-repeat fixed ...\" style= {{ backgroundImage: `url('${backG}')` }}>\r\n                <div className=\"col-start-2 col-span-4 p-12 bg-blue-600 rounded-lg shadow-xl bg-transparent bg-opacity-60 sm:w-8/12 md:w-1/2 lg:w-7/12\">\r\n                    <form className=\"\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"flex justify-center mb-5\"><img className=\"w-36 h-36 bg-white rounded-full\" src={ubbLogo}  /></div>\r\n                        <h1 className=\"text-2xl w-full font-bold text-dark flex justify-center mb-5 \"><span>Sign in</span></h1>\r\n                        <label for=\"email\" className=\"block text-s font-semibold text-dark uppercase\">E-mail</label>\r\n                        <input id=\"email\" type=\"email\" name=\"email\" placeholder=\"Enter your email\"  onChange={this.handleChange} className=\"block rounded-lg w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                        <label for=\"password\" className=\"block mt-2 text-s font-semibold text-dark uppercase\">Password</label>\r\n                        <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"Enter your password\"  onChange={this.handleChange} className=\"block rounded-lg w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                        <button type=\"submit\" className=\"w-full py-3 mt-6 font-medium tracking-widest rounded-md text-white uppercase bg-blue-800 shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">\r\n                            Sign in\r\n                        </button>\r\n                        <p className=\"flex justify-between inline-block mt-4 text-s font-semibold text-white cursor-pointer hover:text-black\">Forgot password?</p>\r\n                        {authError && (\r\n                            <div>\r\n                                <span className=\"text-red-600 font-bold text-lg\">{authError}. Please try again!</span>\r\n                            </div>\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","C:\\Users\\dumar\\marketplace\\src\\components\\SignUp.js",[],["146","147"],"C:\\Users\\dumar\\marketplace\\src\\components\\JobPost.js",["148","149","150","151","152"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport background from '../jobBack.jpg';\r\nimport jobLogo from '../insure.svg'\r\n\r\n\r\nconst JobPost = (props) => {\r\n\r\n    const { post, auth } = props;\r\n\r\n    if(!auth.uid){\r\n        return <Redirect to='/signin' />;\r\n    }else if(post) {\r\n    const { company, title, location, contract, apply, postedAt, role, cassification, technologies, tools, responsabilities } = post[0];\r\n    return (\r\n            <div>\r\n                {/* Job title and description div */}\r\n                <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                    <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                        <div className='ml-44 py-20' >\r\n                            <span className='text-4xl fond-bold'>{title}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* Grid layout under job title, divided in 3 cols where text ocupies 2 cols and 1 col is for key information div on the right side */}\r\n                <div className='grid grid-cols-3 gap-4'>\r\n                    <div class='col-span-2 ... shadow-2xl border-2 ml-44 mb-4 mt-16 rounded-lg'>\r\n                        <div className='px-6 py-8'>\r\n                        <h1 className='text-2xl py-6 font-semibold'>Description</h1>\r\n                        <p>Google is and always will be an engineering company. We hire people with a broad set of ical skills who are ready to tackle\r\n                             some of technology’s greatest challenges and make an impact on millions, if not billions, of users. At Google, engineers not only\r\n                              revolutionize search, they routinely work on massive scalability and storage solutions, large-scale applications and rely new platforms\r\n                             for developers around the world.\r\n                             From AdWords to Chrome, Android to Ye, Social to Local, Google engineers are changing the world.\r\n                        </p>\r\n                        <h1 className='text-2xl py-6 font-semibold'>Responsabilities</h1>\r\n                        <p>{responsabilities}</p>\r\n                        <h1 className='text-2xl py-6 font-semibold'>How to apply?</h1>\r\n                        <p>{apply}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* Job Overview card on the right side with Job Description tags */}\r\n                    <div className='shadow-xl ml-10 mr-20 rounded-lg border-2 h-auto mb-4 mt-16'>\r\n                        <div className='border-b-2' >\r\n                            <div className='py-4 ml-6'>\r\n                                <span className='text-xl font-semibold'>Job Overview</span>\r\n                            </div>\r\n                        </div>\r\n                        {/*Image div with Company Logo  */}\r\n                        <div className='border-b-2 py-4'>\r\n                            <img className='my-8 mx-32' src={jobLogo}/>\r\n                            <span className='font-semibold ml-28 px-2'> {company} </span>\r\n                        </div>\r\n                        <div className='ml-6'>\r\n                            {/* Posted on heading with icon */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n\t\t\t\t\t\t        <path d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n\t\t\t\t\t            </svg>\r\n                               <h1 className='ml-2 font-semibold'>Posted on</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'> {moment(postedAt.toDate()).calendar()}</span>\r\n                            </div>\r\n                            {/* Location div with header */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                    <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n                                    <path d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                                    <path d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                                    </svg>\r\n                                    <h1 className='ml-2 font-semibold'>Location</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'>{location}</span>\r\n                            </div>\r\n                            {/* Title div with header */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n                                 strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                                    <h1 className='ml-2 font-semibold'>Title</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'>{title}</span>\r\n                            </div>\r\n                            {/* Category div with header */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                    <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" \r\n                                    strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0\r\n                                     01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n                                    </svg>\r\n                                    <h1 className='ml-2 font-semibold'>Role</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'>{role}</span>\r\n                            </div>\r\n                            <div className='mb-6'>\r\n                                <button type=\"submit\" className=\"w-64 mx-8 py-3 mt-6 font-medium tracking-widest rounded-md text-white uppercase bg-blue-800 shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">\r\n                                Apply now\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        ); \r\n    } else {\r\n            return (\r\n                <div className=\"container center\">\r\n                    Posts are loading...\r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const pathname = ownProps.location.pathname;\r\n    const splitPath = pathname.split('/');\r\n    const postId = splitPath[2];\r\n    \r\n    return {\r\n        postId : postId,\r\n        post: state.firestore.ordered.posts,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((props) => [\r\n        {\r\n            collection: 'posts',\r\n            doc: props.postId\r\n        }\r\n    \r\n    ])\r\n)(JobPost);",["153","154"],"C:\\Users\\dumar\\marketplace\\src\\components\\CreatePost.js",["155"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignedInLinks.js",["156","157"],"C:\\Users\\dumar\\marketplace\\src\\components\\Home.js",["158","159","160","161"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignedOutLinks.js",["162"],"import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div className='flex my-2 py-2 mx-2 '>\r\n            <div className='justify-center'>\r\n                <ul className=\"md:flex items-center justify-between text-base text-blue-600 pt-4 md:pt-0\">\r\n                    <li>\r\n                        <NavLink className=\"bg-red-600 text-white  px-9 py-2 rounded  hover:bg-blue-500 mx-2 hover:text-gray-100\" to='/signin'>Sign In</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"bg-transparent text-white  px-9 py-2 rounded border border-gray-300  mx-2 -2 hover:bg-gray-100 hover:text-gray-700\" to='/signup'>Sign Up</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(SignedOutLinks);\r\n","C:\\Users\\dumar\\marketplace\\src\\index.js",[],["163","164"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\rootReducer.js",[],["165","166"],"C:\\Users\\dumar\\marketplace\\src\\config\\fbConfig.js",[],["167","168"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\authReducer.js",["169","170"],"const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        default:\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ... state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ... state,\r\n                authError: action.err.message\r\n            }\r\n    }\r\n    \r\n};\r\n\r\nexport default authReducer;\r\n",["171","172"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\postsReducer.js",["173"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\postsActions.js",["174"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\companiesReducer.js",[],["175","176"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\authActions.js",[],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\categoriesReducer.js",[],"C:\\Users\\dumar\\marketplace\\src\\components\\LandingPage.js",["177","178"],"import React from 'react';\r\nimport backG from '../header-wall.jpg';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport ubbLogo from '../ubbLogo.png';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nconst LandingPage = (props) => {\r\n    const { auth } = props;\r\n\r\n    if(auth.uid) return <Redirect to='/home' />;\r\n    return(  \r\n        <div className=\"grid grid-cols-2 text-white w-full h-full fixed ...\">\r\n             <div className=\"col-span-1 flex flex-wrap items-start justify-center bg-fixed bg-center bg-content bg-no-repeat \" style= {{ backgroundImage: `url('${backG}')` }}>\r\n                 <div className=\"mt-36 flex justify-center w-full\">\r\n                    <div className=\"items-center\">\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"h-8 w-8 fill-current text-red-600 ...\" >\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\">\r\n                                <span>Find Job Opportunities</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className=\"h-8 w-8 fill-current text-red-600 ...\" >\r\n                            <path d=\"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\"><span>Find Project Opportunities</span></h1>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className=\"h-8 w-8 fill-current text-red-600 ...\">\r\n                            <path fillRule=\"evenodd\" d=\"M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\"><span>Find Collaboration Opportunities</span></h1>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n            {/* <img src={backG} alt=\"Mobile Phone\" className=\"w-1/2 object-content\"/> */}\r\n                <div className=\"col-span-1 flex justify-center  bg-blue-400\">\r\n                    <div className=\"w-full text-white flex md:justify-center text-center md:text-left p-52\">\r\n                        <div >\r\n                            <div className=\"flex justify-center\">\r\n                                <h2 className=\"leading-none font-bold text-2xl xs:text-2x1 text-red-600 md:text-4xl lg:6x1 \"><span className=\"text-blue-800\">Welcome to </span>UBB <span className=\"text-blue-800\">Marketplace</span></h2>\r\n                            </div>\r\n                            <div className=\"flex justify-center md:justify-center md:flex  my-12\">\r\n                                <img src={ubbLogo} alt=\"Mobile Phone\" className=\"mx-1\" />\r\n                            </div>\r\n                            <div className=\"flex justify-center\">\r\n                                <NavLink className=\"px-16 w-96 flex justify-center rounded-full bg-blue-800 text-white font-bold p-4 uppercase border-blue-500 border hover:bg-gray-100 hover:text-gray-700\" to='/signup'>\r\n                                    <span>Get started</span>\r\n                                </ NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\classificationsReducer.js",[],["179","180"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\technologiesReducer.js",[],"C:\\Users\\dumar\\marketplace\\src\\components\\MyPosts.js",["181"],"C:\\Users\\dumar\\marketplace\\src\\components\\EditPost.js",["182","183"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { updatePost } from '../store/actions/postsActions';\r\nimport { Redirect } from 'react-router';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport firebase from '../config/fbConfig';\r\nimport '../App.css';\r\n\r\nclass EditPost extends React.Component {\r\n\r\n    state = {\r\n        company: '',\r\n        location: '',\r\n        contract: '',\r\n        apply: '',\r\n        title: '',\r\n        role : '',\r\n        classification : '',\r\n        technologies: [],\r\n        tools: [],\r\n        responsabilities: '',    \r\n        dataTools : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.multiselectRef = React.createRef();\r\n   \r\n\r\n        const pathname = this.props.location.pathname;\r\n        const splitPath = pathname.split('/');\r\n        const postId = splitPath[2];\r\n\r\n        const ref = firebase.firestore();\r\n        const postRef = ref.collection('posts').doc(postId).get().then( (doc) => {\r\n            \r\n\r\n                if(doc.exists){\r\n                const post = doc.data();\r\n\r\n                this.setState({\r\n                    company: post.company,\r\n                    location: post.location,\r\n                    contract: post.contract,\r\n                    apply: post.apply,\r\n                    title: post.title,\r\n                    role : post.role,\r\n                    classification : post.classification,\r\n                    technologies: post.technologies,\r\n                    tools: post.tools,\r\n                    responsabilities: post.responsabilities\r\n                }); }\r\n        \r\n\r\n        }); \r\n     \r\n    }\r\n\r\n    resetValues() {\r\n        // By calling the belowe method will reset the selected values programatically\r\n        this.multiselectRef.current.resetSelectedValues();\r\n      }\r\n\r\n    setTools = (technology) => {\r\n        const ref = firebase.firestore().collection('tools');\r\n        let setToolsArray = [];\r\n        ref.where(\"relatedTech\", \"==\", technology ).onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                //setToolsArray.push(doc.data());\r\n                this.setState({\r\n                    dataTools : [ ...this.state.dataTools, doc.data()]\r\n                });\r\n            })\r\n        });\r\n\r\n\r\n        if(setToolsArray){\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    removeTools = (technology) =>{\r\n        let updatedArray = this.state.dataTools.filter(item => item.relatedTech !== technology.id);\r\n        this.setState({\r\n            dataTools : updatedArray\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        if(e.target.id === 'title'){\r\n            this.setState({\r\n                company: this.props.company.name\r\n            })\r\n        }\r\n        if(e.target.value !== ' '){\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    }\r\n\r\n    handleAddTechnologies = (selectedList, selectedItem) => { \r\n            this.setTools(selectedItem.id);\r\n            this.setState({\r\n                technologies: [...this.state.technologies, selectedItem]\r\n            });     \r\n      \r\n    }\r\n\r\n    handleAddTools = (selectedList,selectedItem) => {\r\n        this.setState({\r\n            tools: [...this.state.tools, selectedItem]\r\n        });\r\n        \r\n       \r\n    }\r\n\r\n    handleRemoveTechnologies = (selectedList, removedItem) => {\r\n       \r\n        this.removeTools(removedItem);\r\n        let updatedArray = this.state.technologies.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            technologies: updatedArray\r\n        });\r\n        this.multiselectRef.current.resetSelectedValues();\r\n        \r\n    }\r\n\r\n    handleRemoveTools = (selectedList, removedItem) => {\r\n        let updatedArray = this.state.tools.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            tools: updatedArray\r\n        });\r\n        \r\n    }\r\n\r\n   \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const pathname = this.props.location.pathname;\r\n        const splitPath = pathname.split('/');\r\n        const postId = splitPath[2];\r\n        // We pass the post we want to create which is the state of the component after we submit the form\r\n        this.props.updatePost(this.state, postId);\r\n    }\r\n\r\n    render() {\r\n        const { auth, post, profile, classifications } = this.props;\r\n        const allTechnologies = this.props.technologies;\r\n        const { company, location, contract, apply, title, role, classification, technologies, tools, responsabilities } = post.length !== 0 ? post[0]: {};\r\n        let dataTechnologies = [];\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        const styles = {\r\n            multiselectContainer: { \r\n\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                borderRadius: \"0.25rem\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                borderColor: \"rgba(229, 231, 235, var(--tw-border-opacity))\"\r\n\r\n            },\r\n            searchBox: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\"\r\n             },\r\n             optionContainer: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                marginBottom: \"0.9rem\"\r\n             }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {/* Create title and description div */}\r\n                <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                    <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Edit Post</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form className=\"mx-18 p-5\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"grid grid-cols-6 gap-4\">\r\n                        {/* Form on the left side */}\r\n                        <div className=\"col-start-2 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"block text-lg font-semibold  text-gray-00\" for=\"name\">Name</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" value={profile.firstName + \" \"+ profile.lastName} id=\"name\"  type=\"text\" placeholder=\"Your Name\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <label className=\"block text-lg font-semibold  text-sm text-gray-00\" for=\"company\">Company</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" id=\"company\" value={company} type=\"text\" required=\"\" placeholder=\"Company\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"location\">Location</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' value={location}  onChange={this.handleChange} id=\"location\" placeholder='Location' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"contract\">Contract</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' value={contract} onChange={this.handleChange} id=\"contract\" >\r\n                                        <option hidden value=\"\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Contract Type</option>\r\n                                        <option value=\"Full-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Full-Time</option>\r\n                                        <option value=\"Part-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Part-Time</option>\r\n                                        <option value=\"Other\"className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>How to apply?</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' value={apply} cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"apply\" placeholder='How to apply?' />\r\n                                </div>\r\n                                <div className=\"mt-4 flex justify-center\">\r\n                                    <button className=\"w-full mx-5 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-3 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M17.561,2.439c-1.442-1.443-2.525-1.227-2.525-1.227L8.984,7.264L2.21,14.037L1.2,18.799l4.763-1.01\r\n                                        l6.774-6.771l6.052-6.052C18.788,4.966,19.005,3.883,17.561,2.439z M5.68,17.217l-1.624,0.35c-0.156-0.293-0.345-0.586-0.69-0.932\r\n                                        c-0.346-0.346-0.639-0.533-0.932-0.691l0.35-1.623l0.47-0.469c0,0,0.883,0.018,1.881,1.016c0.997,0.996,1.016,1.881,1.016,1.881\r\n                                        L5.68,17.217z\"/>\r\n                                        </svg>\r\n                                        Edit Post\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/*Part of the Form on the right side */}\r\n                        <div className=\"col-start-4 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Job Title</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' value={title} onChange={this.handleChange} placeholder='Job Title' id=\"title\" />\r\n                                </div>\r\n                                \r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Role</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' value={role} onChange={this.handleChange} placeholder='Role' id=\"role\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Classification</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' onChange={this.handleChange} id=\"classification\" placeholder='Classification' >\r\n                                        <option hidden value={classification} className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Select category</option>\r\n                                        {classifications.length === 0 ? (<option ></option>) : (classifications.map( classification =>(\r\n                                            <option value={classification.id}>{classification.name}</option>\r\n                                        )\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Technologies</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={allTechnologies} selectedValues={technologies} placeholder=\"Choose technolgies\" displayValue=\"language\" onSelect={this.handleAddTechnologies} onRemove={this.handleRemoveTechnologies} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Tools</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={this.state.dataTools} selectedValues={tools} placeholder=\"Choose one/more tools\" displayValue=\"name\" onSelect={this.handleAddTools} onRemove={this.handleAddTools} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Responsabilites</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' value={responsabilities} cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"responsabilities\" onChange={this.handleChange} placeholder='Responsabilities' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const profile = state.firebase.profile;\r\n  //  const allCompanies =  profile ? (state.firestore.ordered.companies) : ([]);\r\n    //const company = allCompanies ? (state.firestore.ordered.companies.filter(company => company.id === profile.company)) : ([]);\r\n\r\n    const pathname = ownProps.location.pathname;\r\n    const splitPath = pathname.split('/');\r\n    const postId = splitPath[2];\r\n\r\n    return {\r\n        postId: postId,\r\n        auth: state.firebase.auth,\r\n        classifications: state.firestore.ordered.classifications || state.classification.classifications,\r\n        technologies: state.firestore.ordered.technologies || state.technology.technologies,\r\n        profile: profile,\r\n        post: state.firestore.ordered.posts || []\r\n        //company: company[0] || state.company.companies\r\n\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePost: (post, postId) => dispatch(updatePost(post, postId))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n connect(mapStateToProps, mapDispatchToProps),\r\n firestoreConnect((props) => [\r\n     {\r\n         collection: 'posts',\r\n         doc: props.postId,\r\n     },\r\n    {collection: \"classifications\"}, \r\n    {collection: \"technologies\"}, \r\n     //{collection: \"companies\"}\r\n ])\r\n)(EditPost);","C:\\Users\\dumar\\marketplace\\src\\components\\Profile.js",["184","185"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    render(){\r\n        const { profile, auth } = this.props;\r\n        return(\r\n        <div className=\" grid grid-cols-3\">\r\n             <div className='col-start-1 col-span-3 bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                        <div className='bg-blue-600 bg-transparent bg-opacity-30 '>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Profile</span>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            <div className=\"col-start-2 col-span-1\">\r\n                <form className=\"w-full\">\r\n                <div className=\"flex justify-center w-full\">\r\n                                <div className=\"rounded-full bg-gradient-to-r from-green-400 to-blue-500 ... text-2xl font-bold p-10  cursor-pointer focus:outline-none\" onClick={() => this.handleDropdown()} >\r\n                                    RD\r\n                                </div>\r\n                            </div>\r\n                    <div className=\"md:inline-flex space-y-4 md:space-y-0 w-full p-4 text-gray-500 items-center\">\r\n                        <h2 className=\"md:w-1/3 max-w-sm mx-auto\">Account</h2>\r\n                        <div className=\"md:w-2/3 max-w-sm mx-auto\">\r\n                        <label className=\"text-sm text-gray-400\">Email</label>\r\n                        <div className=\"w-full inline-flex border rounded\">\r\n                            <div className=\"pt-2 w-1/12 bg-gray-100 bg-opacity-50\">\r\n                            <svg\r\n                                fill=\"none\"\r\n                                className=\"w-6 text-gray-400 mx-auto\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                            >\r\n                                <path\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                stroke-width=\"2\"\r\n                                d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                                />\r\n                            </svg>\r\n                            </div>\r\n                            <input\r\n                            type=\"email\"\r\n                            value={auth.email}\r\n                            className=\"w-11/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                            placeholder=\"email@example.com\"\r\n                            disabled\r\n                            />\r\n                        </div>\r\n                        </div>\r\n                 </div>\r\n\r\n                    <div className=\"md:inline-flex  space-y-4 md:space-y-0  w-full p-4 text-gray-500 items-center\">\r\n                        <h2 className=\"md:w-1/3 mx-auto max-w-sm\">Personal info</h2>\r\n                        <div className=\"md:w-2/3 mx-auto max-w-sm space-y-5\">\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-400\">Name</label>\r\n                            <div className=\"flex\">\r\n                                <div className=\"w-full mr-6 inline-flex border rounded\">\r\n                                <div className=\"w-2/12 pt-2 bg-gray-100\">\r\n                                    <svg\r\n                                    fill=\"none\"\r\n                                    className=\"w-5 text-gray-400 mx-auto\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                    >\r\n                                    <path\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        stroke-width=\"2\"\r\n                                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                                    />\r\n                                    </svg>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={profile.firstName}\r\n                                    className=\"w-10/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n                                </div>\r\n                                <div className=\"w-full inline-flex border rounded\">\r\n                                <div className=\"w-2/12 pt-2 bg-gray-100\">\r\n                                    <svg\r\n                                    fill=\"none\"\r\n                                    className=\"w-5 text-gray-400 mx-auto\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                    >\r\n                                    <path\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        stroke-width=\"2\"\r\n                                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                                    />\r\n                                    </svg>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={profile.lastName}\r\n                                    className=\"w-10/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                    placeholder=\"Last Name\"\r\n                                />\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-400\">Phone number</label>\r\n                            <div className=\"w-full inline-flex   border rounded\">\r\n                            <div className=\"pt-2 w-1/12 bg-gray-100 \">\r\n                                <svg\r\n                                fill=\"none\"\r\n                                className=\"w-6 text-gray-400 mx-auto\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                                >\r\n                                <path\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                    stroke-width=\"2\"\r\n                                    d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\r\n                                />\r\n                                </svg>\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"w-11/12 focus:outline-none  focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                placeholder=\"12341234\"\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-full flex justify-center mt-20\">\r\n                        <button className=\"w-64 mx-20 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-3 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M17.561,2.439c-1.442-1.443-2.525-1.227-2.525-1.227L8.984,7.264L2.21,14.037L1.2,18.799l4.763-1.01\r\n                                        l6.774-6.771l6.052-6.052C18.788,4.966,19.005,3.883,17.561,2.439z M5.68,17.217l-1.624,0.35c-0.156-0.293-0.345-0.586-0.69-0.932\r\n                                        c-0.346-0.346-0.639-0.533-0.932-0.691l0.35-1.623l0.47-0.469c0,0,0.883,0.018,1.881,1.016c0.997,0.996,1.016,1.881,1.016,1.881\r\n                                        L5.68,17.217z\"/>\r\n                                        </svg>\r\n                                        Update Profile\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        profile: state.firebase.profile,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);",{"ruleId":"186","severity":1,"message":"187","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"190","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":14},{"ruleId":"186","severity":1,"message":"191","line":6,"column":8,"nodeType":"188","messageId":"189","endLine":6,"endColumn":17},{"ruleId":"186","severity":1,"message":"192","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":16},{"ruleId":"186","severity":1,"message":"193","line":17,"column":13,"nodeType":"188","messageId":"189","endLine":17,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":26,"column":37,"nodeType":"196","endLine":26,"endColumn":117},{"ruleId":"186","severity":1,"message":"197","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":25},{"ruleId":"186","severity":1,"message":"198","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":16},{"ruleId":"186","severity":1,"message":"191","line":6,"column":8,"nodeType":"188","messageId":"189","endLine":6,"endColumn":17},{"ruleId":"186","severity":1,"message":"199","line":12,"column":8,"nodeType":"188","messageId":"189","endLine":12,"endColumn":15},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"200","replacedBy":"204"},{"ruleId":"202","replacedBy":"205"},{"ruleId":"186","severity":1,"message":"187","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"206","line":5,"column":19,"nodeType":"188","messageId":"189","endLine":5,"endColumn":27},{"ruleId":"186","severity":1,"message":"207","line":41,"column":15,"nodeType":"188","messageId":"189","endLine":41,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":34,"column":67,"nodeType":"196","endLine":34,"endColumn":133},{"ruleId":"200","replacedBy":"208"},{"ruleId":"202","replacedBy":"209"},{"ruleId":"186","severity":1,"message":"210","line":18,"column":39,"nodeType":"188","messageId":"189","endLine":18,"endColumn":47},{"ruleId":"186","severity":1,"message":"211","line":18,"column":72,"nodeType":"188","messageId":"189","endLine":18,"endColumn":85},{"ruleId":"186","severity":1,"message":"212","line":18,"column":87,"nodeType":"188","messageId":"189","endLine":18,"endColumn":99},{"ruleId":"186","severity":1,"message":"213","line":18,"column":101,"nodeType":"188","messageId":"189","endLine":18,"endColumn":106},{"ruleId":"194","severity":1,"message":"195","line":55,"column":29,"nodeType":"196","endLine":55,"endColumn":72},{"ruleId":"200","replacedBy":"214"},{"ruleId":"202","replacedBy":"215"},{"ruleId":"186","severity":1,"message":"216","line":126,"column":13,"nodeType":"188","messageId":"189","endLine":126,"endColumn":29},{"ruleId":"186","severity":1,"message":"217","line":2,"column":19,"nodeType":"188","messageId":"189","endLine":2,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":87,"column":29,"nodeType":"196","endLine":87,"endColumn":189},{"ruleId":"186","severity":1,"message":"220","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"221","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"222","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":12},{"ruleId":"186","severity":1,"message":"223","line":70,"column":29,"nodeType":"188","messageId":"189","endLine":70,"endColumn":37},{"ruleId":"186","severity":1,"message":"224","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":21},{"ruleId":"200","replacedBy":"225"},{"ruleId":"202","replacedBy":"226"},{"ruleId":"200","replacedBy":"227"},{"ruleId":"202","replacedBy":"228"},{"ruleId":"200","replacedBy":"229"},{"ruleId":"202","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":28,"column":20,"nodeType":"233","messageId":"234","endLine":28,"endColumn":21,"fix":"235"},{"ruleId":"231","severity":1,"message":"232","line":34,"column":20,"nodeType":"233","messageId":"234","endLine":34,"endColumn":21,"fix":"236"},{"ruleId":"200","replacedBy":"237"},{"ruleId":"202","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":16,"column":9,"nodeType":"241","messageId":"242","endLine":17,"endColumn":26},{"ruleId":"186","severity":1,"message":"243","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":19},{"ruleId":"200","replacedBy":"244"},{"ruleId":"202","replacedBy":"245"},{"ruleId":"186","severity":1,"message":"246","line":6,"column":10,"nodeType":"188","messageId":"189","endLine":6,"endColumn":17},{"ruleId":"186","severity":1,"message":"247","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":26},{"ruleId":"200","replacedBy":"248"},{"ruleId":"202","replacedBy":"249"},{"ruleId":"186","severity":1,"message":"250","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"186","severity":1,"message":"251","line":37,"column":15,"nodeType":"188","messageId":"189","endLine":37,"endColumn":22},{"ruleId":"186","severity":1,"message":"216","line":158,"column":13,"nodeType":"188","messageId":"189","endLine":158,"endColumn":29},{"ruleId":"186","severity":1,"message":"247","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":26},{"ruleId":"186","severity":1,"message":"246","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":17},"no-unused-vars","'backG' is defined but never used.","Identifier","unusedVar","'avatar' is defined but never used.","'FilterBar' is defined but never used.","'Dropdown' is defined but never used.","'defaultOption' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'JobBoardComponent' is defined but never used.","'HomePage' is defined but never used.","'Landing' is defined but never used.","no-native-reassign",["252"],"no-negated-in-lhs",["253"],["252"],["253"],"'Redirect' is defined but never used.","'db' is assigned a value but never used.",["252"],["253"],"'contract' is assigned a value but never used.","'cassification' is assigned a value but never used.","'technologies' is assigned a value but never used.","'tools' is assigned a value but never used.",["252"],["253"],"'dataTechnologies' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is defined but never used.","'location' is assigned a value but never used.","'SignedInLinks' is defined but never used.",["252"],["253"],["252"],["253"],["252"],["253"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"254","text":"255"},{"range":"256","text":"255"},["252"],["253"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'constants' is defined but never used.",["252"],["253"],"'compose' is defined but never used.","'firestoreConnect' is defined but never used.",["252"],["253"],"'Link' is defined but never used.","'postRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[749,750],"",[918,919]]