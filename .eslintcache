[{"C:\\Users\\dumar\\marketplace\\src\\components\\Navbar.js":"1","C:\\Users\\dumar\\marketplace\\src\\components\\FilterBar.js":"2","C:\\Users\\dumar\\marketplace\\src\\App.js":"3","C:\\Users\\dumar\\marketplace\\src\\components\\HomePage.js":"4","C:\\Users\\dumar\\marketplace\\src\\components\\JobBoardComponent.js":"5","C:\\Users\\dumar\\marketplace\\src\\components\\SignIn.js":"6","C:\\Users\\dumar\\marketplace\\src\\components\\SignUp.js":"7","C:\\Users\\dumar\\marketplace\\src\\components\\JobPost.js":"8","C:\\Users\\dumar\\marketplace\\src\\components\\CreatePost.js":"9","C:\\Users\\dumar\\marketplace\\src\\components\\SignedInLinks.js":"10","C:\\Users\\dumar\\marketplace\\src\\components\\Home.js":"11","C:\\Users\\dumar\\marketplace\\src\\components\\SignedOutLinks.js":"12","C:\\Users\\dumar\\marketplace\\src\\index.js":"13","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\rootReducer.js":"14","C:\\Users\\dumar\\marketplace\\src\\config\\fbConfig.js":"15","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\authReducer.js":"16","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\postsReducer.js":"17","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\postsActions.js":"18","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\companiesReducer.js":"19","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\authActions.js":"20","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\categoriesReducer.js":"21","C:\\Users\\dumar\\marketplace\\src\\components\\LandingPage.js":"22","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\classificationsReducer.js":"23","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\technologiesReducer.js":"24","C:\\Users\\dumar\\marketplace\\src\\components\\MyPosts.js":"25","C:\\Users\\dumar\\marketplace\\src\\components\\EditPost.js":"26","C:\\Users\\dumar\\marketplace\\src\\components\\Profile.js":"27","C:\\Users\\dumar\\marketplace\\src\\components\\AppSettings.js":"28","C:\\Users\\dumar\\marketplace\\src\\components\\Partners.js":"29","C:\\Users\\dumar\\marketplace\\src\\components\\CompanyPostComponent.js":"30","C:\\Users\\dumar\\marketplace\\src\\components\\AddCompany.js":"31","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\companiesAction.js":"32","C:\\Users\\dumar\\marketplace\\src\\components\\EditCompany.js":"33","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\categoriesActions.js":"34","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\toolsReducer.js":"35","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\toolsActions.js":"36","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\techonolgiesActions.js":"37","C:\\Users\\dumar\\marketplace\\src\\components\\Notifications.js":"38","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\classificationActions.js":"39","C:\\Users\\dumar\\marketplace\\src\\components\\Pagination.js":"40","C:\\Users\\dumar\\marketplace\\src\\components\\RecoverPassord.js":"41"},{"size":1891,"mtime":1612473498007,"results":"42","hashOfConfig":"43"},{"size":4886,"mtime":1612387928548,"results":"44","hashOfConfig":"43"},{"size":1994,"mtime":1612129993915,"results":"45","hashOfConfig":"43"},{"size":448,"mtime":1607779819607,"results":"46","hashOfConfig":"43"},{"size":6034,"mtime":1612473485349,"results":"47","hashOfConfig":"43"},{"size":3377,"mtime":1612384701115,"results":"48","hashOfConfig":"43"},{"size":5475,"mtime":1612384730422,"results":"49","hashOfConfig":"43"},{"size":8858,"mtime":1612392953998,"results":"50","hashOfConfig":"43"},{"size":14904,"mtime":1612387302002,"results":"51","hashOfConfig":"43"},{"size":8612,"mtime":1612479054653,"results":"52","hashOfConfig":"43"},{"size":6303,"mtime":1612473472996,"results":"53","hashOfConfig":"43"},{"size":1090,"mtime":1612384275617,"results":"54","hashOfConfig":"43"},{"size":938,"mtime":1610818494195,"results":"55","hashOfConfig":"43"},{"size":878,"mtime":1612215618713,"results":"56","hashOfConfig":"43"},{"size":650,"mtime":1612371762708,"results":"57","hashOfConfig":"43"},{"size":1263,"mtime":1612382762741,"results":"58","hashOfConfig":"43"},{"size":1701,"mtime":1612100401355,"results":"59","hashOfConfig":"43"},{"size":6847,"mtime":1612386413342,"results":"60","hashOfConfig":"43"},{"size":736,"mtime":1612127218896,"results":"61","hashOfConfig":"43"},{"size":2522,"mtime":1612382639647,"results":"62","hashOfConfig":"43"},{"size":627,"mtime":1612215137341,"results":"63","hashOfConfig":"43"},{"size":4320,"mtime":1611426994334,"results":"64","hashOfConfig":"43"},{"size":690,"mtime":1612215438586,"results":"65","hashOfConfig":"43"},{"size":651,"mtime":1612473535202,"results":"66","hashOfConfig":"43"},{"size":2571,"mtime":1612477621332,"results":"67","hashOfConfig":"43"},{"size":16684,"mtime":1612388644064,"results":"68","hashOfConfig":"43"},{"size":9093,"mtime":1611646745082,"results":"69","hashOfConfig":"43"},{"size":23056,"mtime":1612473424030,"results":"70","hashOfConfig":"43"},{"size":2019,"mtime":1612379637785,"results":"71","hashOfConfig":"43"},{"size":5870,"mtime":1612380605434,"results":"72","hashOfConfig":"43"},{"size":5907,"mtime":1612393339075,"results":"73","hashOfConfig":"43"},{"size":1976,"mtime":1612378676508,"results":"74","hashOfConfig":"43"},{"size":7261,"mtime":1612473443269,"results":"75","hashOfConfig":"43"},{"size":1145,"mtime":1612214842714,"results":"76","hashOfConfig":"43"},{"size":561,"mtime":1612215546881,"results":"77","hashOfConfig":"43"},{"size":1126,"mtime":1612216793133,"results":"78","hashOfConfig":"43"},{"size":1181,"mtime":1612214106346,"results":"79","hashOfConfig":"43"},{"size":1505,"mtime":1612391293081,"results":"80","hashOfConfig":"43"},{"size":1227,"mtime":1612214501693,"results":"81","hashOfConfig":"43"},{"size":834,"mtime":1612470233061,"results":"82","hashOfConfig":"43"},{"size":2228,"mtime":1612384799547,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"hi92i9",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"127","usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},"C:\\Users\\dumar\\marketplace\\src\\components\\Navbar.js",["195","196","197","198","199","200"],"import React from 'react';\r\nimport backG from '../try.jpg';\r\nimport avatar from '../avatar.jpg'\r\nimport ubbAvatar from '../ubb.png';\r\nimport '../css/Navbar.css';\r\nimport FilterBar from './FilterBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Dropdown from 'react-dropdown';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n\r\n        var  options = ['Job, Internship, Project'];\r\n        var defaultOption = options[0];\r\n        //if uid exists then user exists and is logged in => navbar shows SignedIn Links else SignedOut Links\r\n        const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n        return(\r\n            <nav id=\"header\" className=\"w-full flex flex-wrap top-10 py-1 bg-blue-800 shadow-2xl justify-between pt-2\" >\r\n                <div className='flex my-2'>\r\n                    <div className=\"flex px-8 \">\r\n                        <Link to='/home' >\r\n                            <div className=\"hidden md:flex md:items-center md:w-auto w-full order-3 md:order-1 \" id=\"menu\">\r\n                                    <img className=\"w-12 h-12 bg-white ml-auto mr-2 rounded-full\" src={ubbAvatar} />\r\n                                    <span className='mr-1 text-xl text-red-600 mb-1 font-bold '>UBB</span>\r\n                                    <span className='text-xl text-blue-400 mb-1'>Marketplace</span>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    {links}\r\n                </div>\r\n            </nav>\r\n            \r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\n",["201","202"],"C:\\Users\\dumar\\marketplace\\src\\components\\FilterBar.js",[],"C:\\Users\\dumar\\marketplace\\src\\App.js",["203","204","205","206"],"C:\\Users\\dumar\\marketplace\\src\\components\\HomePage.js",[],["207","208"],"C:\\Users\\dumar\\marketplace\\src\\components\\JobBoardComponent.js",["209","210","211","212","213"],"import React from 'react';\r\nimport backG from '../try.jpg';\r\nimport logo from '../eyecam-co.svg';\r\nimport moment from 'moment';\r\nimport { NavLink, Redirect, useHistory } from 'react-router-dom';\r\nimport firebase from '../config/fbConfig';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux'; \r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { deletePost } from '../store/actions/postsActions';\r\n\r\nconst JobBoardComponent = ({ companyData, edit, deletePost, post, post: {\r\n    company,\r\n    featured,\r\n    title,\r\n    role,\r\n    postedAt,\r\n    contract,\r\n    location,\r\n    companyLogo\r\n},\r\nid,\r\nhandleTagClick\r\n }) => {\r\n    const tags = [role];\r\n\r\n    \r\n    const techs = post.technologies;\r\n    const technologies = techs.map(function (technology) { return technology.language; }); \r\n\r\n    const toolsA = post.tools;\r\n    const tools = toolsA.map(function (tool) { return tool.name; });\r\n\r\n    if (tools) {\r\n        tags.push(...tools);\r\n    }\r\n\r\n    if (technologies) {\r\n        tags.push(...technologies);\r\n    }\r\n    const history = useHistory();\r\n\r\n    const handleDeletePost = () => {\r\n        const db = firebase.firestore();//\r\n        //db.collection('posts').doc(post.id).delete();\r\n        deletePost(post);\r\n        history.push('/myPosts');\r\n        \r\n    }\r\n\r\n    const isNew = true;\r\n\r\n    const today = new Date().getDay();\r\n    const postedAtDate= moment(postedAt.toDate()).day();\r\n   \r\n  \r\n    return ( \r\n        // If job is featured then it should have a blue margin on the left border side\r\n        <div className={`flex flex-col bg-white shadow-xl border-gray-200 my-16 mx-10 p-6 rounded hover:bg-gray-100\r\n        ${featured && 'border-l-4 border-blue-500 border-solid'} sm:flex-row sm:my-4`} >\r\n            <div>\r\n                {/* sm: -> is a breakpoint which says that mt should pe 0 when desktop version is encountered */}\r\n                <img className=\"-mt-16 mb-4 w-20 h-20 s sm:h-24 sm:w-24 sm:my-0\" src={companyLogo} alt={companyLogo}/>\r\n            </div>\r\n            <div className='flex flex-col justify-between ml-4'>\r\n                <h3 className='font-bold text-blue-500'>\r\n                    {company}\r\n                    {/* if isNew and featured property exists than create a little span for each one of them */}\r\n                    {today === postedAtDate && (<span className='text-blue-100 bg-blue-500 font-bold \r\n                 m-2  rounded-full py-1 px-2'>New</span>)}\r\n                    {featured && (<span className='text-white bg-gray-800 font-bold \r\n                py-1 px-2 rounded-full'>Featured</span>)}\r\n                </h3>\r\n                <h2 className='font-bold text-xl my-2 '>{title}</h2>\r\n                <p className='text-gray-700'>\r\n                   {moment(postedAt.toDate()).calendar()} · {contract} · {location}\r\n                </p>\r\n            </div>\r\n            <div className='flex flex-wrap \r\n            items-center mt-4 mx-4 pt-4 border-t \r\n            border-gray-300 border-solid\r\n            sm:ml-auto sm:border-0 sm:pt-0 sm:mt-0'>\r\n                { tags ? tags.map((tag)=> \r\n                <span\r\n                onClick={() => handleTagClick(tag)}\r\n                 className='cursor-pointer text-blue-100\r\n                  bg-blue-500 font-bold\r\n                   mr-2 mb-4\r\n                p-2 rounded sm:mb-0'>{tag}</span>) : '' }\r\n            </div>\r\n            {edit === \"true\" && \r\n            <div className='flex flex-wrap \r\n                            items-center mt-4 mx-4 pt-4 border-t \r\n                            border-gray-300 border-solid\r\n                            sm:ml-10 sm:border-0 sm:pt-0 sm:mt-0'>\r\n                <NavLink className=\"inline-block p-3 text-center text-white transition bg-blue-800 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" to={'/editPost/' + post.id}>\r\n                    <svg className=\"w-5 h-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fill=\"#FFFFFF\" d=\"M17.561,2.439c-1.442-1.443-2.525-1.227-2.525-1.227L8.984,7.264L2.21,14.037L1.2,18.799l4.763-1.01\r\n                                        l6.774-6.771l6.052-6.052C18.788,4.966,19.005,3.883,17.561,2.439z M5.68,17.217l-1.624,0.35c-0.156-0.293-0.345-0.586-0.69-0.932\r\n                                        c-0.346-0.346-0.639-0.533-0.932-0.691l0.35-1.623l0.47-0.469c0,0,0.883,0.018,1.881,1.016c0.997,0.996,1.016,1.881,1.016,1.881\r\n                                        L5.68,17.217z\"/>\r\n                    </svg>\r\n                </NavLink>\r\n                <button className=\"inline-block p-3 ml-3 text-center text-white transition bg-red-600 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" onClick={handleDeletePost}>\r\n                    <svg className=\"w-5 h-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path\r\n                        fill-rule=\"evenodd\"\r\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                        clip-rule=\"evenodd\"/>\r\n                    </svg>\r\n                </button>\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const profile = state.firebase.profile;\r\n    const companyId = profile.company;\r\n    return {\r\n        profile: profile,\r\n        companyId: companyId,\r\n        companyData: state.firebase.ordered.companies || state.company.companies\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        deletePost: (post) => dispatch(deletePost(post))\r\n    };\r\n}\r\n\r\nexport default compose(\r\nconnect(mapStateToProps, mapDispatchToProps),\r\nfirestoreConnect( (props) => [\r\n    {\r\n        collection: 'companies',\r\n        doc: props.companyId,\r\n    }, \r\n ])\r\n)(JobBoardComponent);",["214","215"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignIn.js",["216"],"import React from 'react';\r\nimport ubbLogo from '../ubb.png';\r\nimport backG from '../header-wall.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/home' />;\r\n        return (\r\n            <div className=\"grid grid-cols-6 w-full h-full place-items-center bg-fixed  bg-center bg-cover bg-no-repeat fixed ...\" style= {{ backgroundImage: `url('${backG}')` }}>\r\n                <div className=\"col-start-2 col-span-4 p-12 bg-blue-600 mb-5 rounded-lg shadow-xl bg-transparent bg-opacity-60 sm:w-8/12 md:w-1/2 lg:w-7/12\">\r\n                    <form className=\"\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"flex justify-center mb-5\"><img className=\"w-36 h-36 bg-white rounded-full\" src={ubbLogo}  /></div>\r\n                        <h1 className=\"text-3xl w-full font-bold text-dark flex justify-center mb-5 \"><span>Sign in</span></h1>\r\n                        <label for=\"email\" className=\"block text-s font-bold text-dark uppercase\">E-mail</label>\r\n                        <input id=\"email\" type=\"email\" name=\"email\" onChange={this.handleChange} className=\"block rounded-lg w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                        <label for=\"password\" className=\"block mt-2 text-s font-bold text-dark uppercase\">Password</label>\r\n                        <input id=\"password\" type=\"password\" name=\"password\"  onChange={this.handleChange} className=\"block rounded-lg w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                        <button type=\"submit\" className=\"w-full py-3 mt-6 font-medium tracking-widest rounded-md text-white uppercase bg-blue-800 shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">\r\n                            Sign in\r\n                        </button>\r\n                        <Link to={'/recoverPassword'} > <p className=\"flex justify-between inline-block mt-4 text-s font-semibold text-white cursor-pointer hover:text-black\">Forgot password?</p></Link>\r\n                        {authError && (\r\n                            <div>\r\n                                <span className=\"text-red-600 font-bold text-lg\">{authError}. Please try again!</span>\r\n                            </div>\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","C:\\Users\\dumar\\marketplace\\src\\components\\SignUp.js",[],["217","218"],"C:\\Users\\dumar\\marketplace\\src\\components\\JobPost.js",["219","220","221","222","223","224"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport background from '../jobBack.jpg';\r\nimport jobLogo from '../insure.svg'\r\n\r\n\r\nconst JobPost = (props) => {\r\n\r\n    const { post, auth } = props;\r\n\r\n    if(!auth.uid){\r\n        return <Redirect to='/signin' />;\r\n    }else if(post) {\r\n    const { company, title, location, contract, apply, postedAt, role, cassification, technologies, tools, companyLogo, description, responsabilities } = post[0];\r\n    return (\r\n            <div>\r\n                {/* Job title and description div */}\r\n                <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                    <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                        <div className='ml-44 py-20' >\r\n                            <span className='text-4xl fond-bold'>{title}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* Grid layout under job title, divided in 3 cols where text ocupies 2 cols and 1 col is for key information div on the right side */}\r\n                <div className='grid grid-cols-3 gap-4'>\r\n                    <div class='col-span-2 ... shadow-2xl border-2 ml-44 mb-4 mt-16 rounded-lg'>\r\n                        <div className='px-6 py-8'>\r\n                        <h1 className='text-2xl py-6 font-semibold'>Description</h1>\r\n                        <p>{description}</p>\r\n                        <h1 className='text-2xl py-6 font-semibold'>Responsabilities</h1>\r\n                        <p>{responsabilities}</p>\r\n                        <h1 className='text-2xl py-6 font-semibold'>How to apply?</h1>\r\n                        <p>{apply}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* Job Overview card on the right side with Job Description tags */}\r\n                    <div className='shadow-xl ml-10 mr-20 rounded-lg border-2 h-auto mb-4 mt-16'>\r\n                        <div className='border-b-2 flex justify-center' >\r\n                            <div className='py-4'>\r\n                                <span className='text-xl font-semibold'>Job Overview</span>\r\n                            </div>\r\n                        </div>\r\n                        {/*Image div with Company Logo  */}\r\n                        <div className='border-b-2 py-4'>\r\n                            <div className=\"flex justify-center\">\r\n                                <img className=\"h-24 w-24 object-contain rounded-full border border-1\" src={companyLogo}/>\r\n                            </div>\r\n                            <div className=\"flex justify-center mt-1\">\r\n                                <span className='font-semibold px-2'> {company} </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='ml-6'>\r\n                            {/* Posted on heading with icon */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n\t\t\t\t\t\t        <path d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n\t\t\t\t\t            </svg>\r\n                               <h1 className='ml-2 font-semibold'>Posted on</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'> {moment(postedAt.toDate()).calendar()}</span>\r\n                            </div>\r\n                            {/* Location div with header */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                    <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n                                    <path d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                                    <path d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                                    </svg>\r\n                                    <h1 className='ml-2 font-semibold'>Location</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'>{location}</span>\r\n                            </div>\r\n                            {/* Title div with header */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\r\n                                 strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                                    <h1 className='ml-2 font-semibold'>Title</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'>{title}</span>\r\n                            </div>\r\n                            {/* Category div with header */}\r\n                            <div className='my-6'>\r\n                                <div className='flex'>\r\n                                    <svg viewBox=\"0 0 24 24\"\r\n                                        width=\"24\"\r\n                                        height=\"24\"\r\n                                        stroke=\"currentColor\"\r\n                                        stroke-width=\"2\"\r\n                                        fill=\"none\"\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        className=\"h-5 w-5\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" \r\n                                    strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0\r\n                                     01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\r\n                                    </svg>\r\n                                    <h1 className='ml-2 font-semibold'>Role</h1>\r\n                                </div>\r\n                                <span className='ml-7 text-gray-400'>{role}</span>\r\n                            </div>\r\n                            <div className='mt-44 mb-4'>\r\n                        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        ); \r\n    } else {\r\n            return (\r\n                <div className=\"container center\">\r\n                    Posts are loading...\r\n                </div>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const pathname = ownProps.location.pathname;\r\n    const splitPath = pathname.split('/');\r\n    const postId = splitPath[2];\r\n    \r\n    return {\r\n        postId : postId,\r\n        post: state.firestore.ordered.posts,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect((props) => [\r\n        {\r\n            collection: 'posts',\r\n            doc: props.postId\r\n        }\r\n    \r\n    ])\r\n)(JobPost);","C:\\Users\\dumar\\marketplace\\src\\components\\CreatePost.js",["225"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createPost } from '../store/actions/postsActions';\r\nimport { Redirect } from 'react-router';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport firebase from '../config/fbConfig';\r\nimport '../App.css';\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    state = {\r\n        company: '',\r\n        location: '',\r\n        contract: '',\r\n        description: '',\r\n        apply: '',\r\n        title: '',\r\n        role : '',\r\n        classification : '',\r\n        technologies: [],\r\n        tools: [],\r\n        responsabilities: '',\r\n        qualifications: '',\r\n        companyLogo: '',    \r\n        dataTools : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.multiselectRef = React.createRef();\r\n     \r\n    }\r\n\r\n    resetValues() {\r\n        // By calling the belowe method will reset the selected values programatically\r\n        this.multiselectRef.current.resetSelectedValues();\r\n      }\r\n\r\n    setTools = (technology) => {\r\n        const ref = firebase.firestore().collection('tools');\r\n        let setToolsArray = [];\r\n        ref.where(\"relatedTech\", \"==\", technology ).onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                //setToolsArray.push(doc.data());\r\n                this.setState({\r\n                    dataTools : [ ...this.state.dataTools, doc.data()]\r\n                });\r\n            })\r\n        });\r\n\r\n\r\n        if(setToolsArray){\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    removeTools = (technology) =>{\r\n        let updatedArray = this.state.dataTools.filter(item => item.relatedTech !== technology.id);\r\n        this.setState({\r\n            dataTools : updatedArray\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        if(e.target.id === 'title'){\r\n            this.setState({\r\n                company: this.props.company.name,\r\n                companyLogo: this.props.company.fileUrl\r\n            })\r\n        }\r\n        if(e.target.value !== ' '){\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    }\r\n\r\n    handleAddTechnologies = (selectedList, selectedItem) => { \r\n            this.setTools(selectedItem.id);\r\n            this.setState({\r\n                technologies: [...this.state.technologies, selectedItem]\r\n            });     \r\n      \r\n    }\r\n\r\n    handleAddTools = (selectedList,selectedItem) => {\r\n        this.setState({\r\n            tools: [...this.state.tools, selectedItem]\r\n        });\r\n        \r\n       \r\n    }\r\n\r\n    handleRemoveTechnologies = (selectedList, removedItem) => {\r\n       \r\n        this.removeTools(removedItem);\r\n        let updatedArray = this.state.technologies.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            technologies: updatedArray\r\n        });\r\n        this.multiselectRef.current.resetSelectedValues();\r\n        \r\n    }\r\n\r\n    handleRemoveTools = (selectedList, removedItem) => {\r\n        let updatedArray = this.state.tools.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            tools: updatedArray\r\n        });\r\n        \r\n    }\r\n\r\n   \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // We pass the post we want to create which is the state of the component after we submit the form\r\n        this.props.createPost(this.state);\r\n        this.props.history.push('/myPosts');\r\n    }\r\n\r\n    render() {\r\n        const { auth, classifications, technologies, profile, company } = this.props;\r\n        let dataTechnologies = [];\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        // create technology options for multiselect\r\n        // if(technologies.length !== 0){\r\n        //     technologies.forEach(technology => {\r\n        //        const object = {Technology: technology.language, id: technology.id}\r\n        //        dataTechnologies.push(object);\r\n        //     })\r\n        // }\r\n\r\n        const styles = {\r\n            multiselectContainer: { \r\n\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                borderRadius: \"0.25rem\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                borderColor: \"rgba(229, 231, 235, var(--tw-border-opacity))\"\r\n\r\n            },\r\n            searchBox: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\"\r\n             },\r\n             optionContainer: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                marginBottom: \"0.9rem\"\r\n             }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {/* Create title and description div */}\r\n                <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                    <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Create Post</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form className=\"mx-18 p-5\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"grid grid-cols-6 gap-4\">\r\n                        {/* Form on the left side */}\r\n                        <div className=\"col-start-2 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"block text-lg font-semibold  text-gray-00\" for=\"name\">Name</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" value={profile.firstName + \" \"+ profile.lastName} id=\"name\"  type=\"text\" placeholder=\"Your Name\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <label className=\"block text-lg font-semibold  text-sm text-gray-00\" for=\"company\">Company</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" id=\"company\" value={company.name} type=\"text\" required=\"\" placeholder=\"Company\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"location\">Location</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' onChange={this.handleChange} id=\"location\" placeholder='Location' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"contract\">Contract</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' onChange={this.handleChange} id=\"contract\" >\r\n                                        <option hidden value=\"\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Contract Type</option>\r\n                                        <option value=\"Full-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Full-Time</option>\r\n                                        <option value=\"Part-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Part-Time</option>\r\n                                        <option value=\"Other\"className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Description</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"description\" placeholder='Describe your post...' />\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>How to apply?</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"apply\" placeholder='How to apply?' />\r\n                                </div>\r\n                                <div className=\"mt-4 flex justify-center\">\r\n                                    <button className=\"w-full mx-5 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-1 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                        C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                        C15.952,9,16,9.447,16,10z\" />\r\n                                        </svg>\r\n                                        Post\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/*Part of the Form on the right side */}\r\n                        <div className=\"col-start-4 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Job Title</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' onChange={this.handleChange} placeholder='Job Title' id=\"title\" />\r\n                                </div>\r\n                                \r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Role</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' onChange={this.handleChange} placeholder='Role' id=\"role\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Classification</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' onChange={this.handleChange} id=\"classification\" placeholder='Classification' >\r\n                                        <option hidden value=\"\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Select category</option>\r\n                                        {classifications.length === 0 ? (<option ></option>) : (classifications.map( classification =>(\r\n                                            <option value={classification.id}>{classification.name}</option>\r\n                                        )\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Technologies</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={technologies} placeholder=\"Choose technolgies\" displayValue=\"language\" onSelect={this.handleAddTechnologies} onRemove={this.handleRemoveTechnologies} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Tools</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={this.state.dataTools} placeholder=\"Choose one/more tools\" displayValue=\"name\" onSelect={this.handleAddTools} onRemove={this.handleAddTools} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Responsabilites</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"responsabilities\" onChange={this.handleChange} placeholder='Responsabilities' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Qualifications</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"qualifications\" onChange={this.handleChange} placeholder='Qualifications' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const profile = state.firebase.profile;\r\n    const allCompanies =  profile ? (state.firestore.ordered.companies) : ([]);\r\n    const company = allCompanies ? (state.firestore.ordered.companies.filter(company => company.id === profile.company)) : ([]);\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        classifications: state.firestore.ordered.classifications || state.classification.classifications,\r\n        technologies: state.firestore.ordered.technologies || state.technology.technologies,\r\n        profile: profile,\r\n        company: company[0] || state.company.companies\r\n\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n connect(mapStateToProps, mapDispatchToProps),\r\n firestoreConnect([\"classifications\", \"technologies\", \"companies\"])\r\n)(CreatePost);","C:\\Users\\dumar\\marketplace\\src\\components\\SignedInLinks.js",["226","227"],"C:\\Users\\dumar\\marketplace\\src\\components\\Home.js",["228","229","230","231","232"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignedOutLinks.js",["233"],"import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\n\r\nconst SignedOutLinks = (props) => {\r\n    return (\r\n        <div className='flex my-2 py-2 mx-2 '>\r\n            <div className='justify-center'>\r\n                <ul className=\"md:flex items-center justify-between text-base text-blue-600 pt-4 md:pt-0\">\r\n                    {props.location.pathname !== '/signin' &&\r\n                    <li>\r\n                        <NavLink className=\"bg-red-600 text-white  px-9 py-2 rounded  hover:bg-blue-500 mx-2 hover:text-gray-100\" to='/signin'>Sign In</NavLink>\r\n                    </li> }\r\n                    {props.location.pathname !== '/signup' &&\r\n                    <li>\r\n                        <NavLink className=\"bg-transparent text-white  px-9 py-2 rounded border border-gray-300  mx-2 -2 hover:bg-gray-100 hover:text-gray-700\" to='/signup'>Sign Up</NavLink>\r\n                    </li> }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(SignedOutLinks);\r\n","C:\\Users\\dumar\\marketplace\\src\\index.js",[],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\rootReducer.js",[],["234","235"],"C:\\Users\\dumar\\marketplace\\src\\config\\fbConfig.js",[],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\authReducer.js",["236","237"],"const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        default:\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ... state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ... state,\r\n                authError: action.err.message\r\n            }\r\n        case 'RECOVER_PASSWORD_SUCCESS':\r\n            console.log('recover success');\r\n            return state;\r\n\r\n        case 'RECOVER_PASSWORD_ERROR':\r\n            console.log('recover error');\r\n            return state;\r\n    }\r\n    \r\n};\r\n\r\nexport default authReducer;\r\n","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\postsReducer.js",["238"],"const initState = {\r\n    posts: [], \r\n    filteredPosts: [],\r\n    classificationFilter: '',\r\n    technologiesFilter: '',\r\n    searchFilter: '',\r\n    postErr: null\r\n};\r\n\r\nconst postsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_POST':\r\n            console.log('created post', action.post);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n        case 'UPDATE_POST':\r\n            return state;\r\n        case 'UPDATE_POST_ERROR':\r\n            return state;\r\n        case 'DELETE_POST':\r\n            return state;\r\n        case 'DELETE_POST_ERROR':\r\n            return state.filter((post) => post.id !== action.id);\r\n        case 'FILTER_BY_CLASSIFICATIONS_POSTS':\r\n            return { \r\n                ...state,\r\n                filteredPosts: action.payload.filteredPosts,\r\n                classificationFilter: action.payload.classification.value\r\n             };\r\n        case 'FILTER_BY_CLASSIFICATIONS_POSTS_ERROR':\r\n            return { \r\n                ...state,\r\n                postErr: action.err \r\n            };\r\n        case 'FILTER_BY_TECHNOLOGIES_POSTS':\r\n            return { \r\n                ...state,\r\n                filteredPosts: action.payload.filteredPosts,\r\n                technologiesFilter: action.payload.technology.value\r\n             };\r\n        case 'SEARCH_POSTS':\r\n            return { \r\n                ...state,\r\n                filteredPosts: action.payload.filteredPosts,\r\n                searchFilter: action.payload.searchTerm\r\n                 };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postsReducer;","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\postsActions.js",["239","240"],"import { constants } from \"react-redux-firebase\";\r\n\r\nexport const createPost = (post) => {\r\n    // because we added withExtraagument to thunk in index.js, we can now pass one more Argument to the thunk return statement\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorid = getState().firebase.auth.uid;\r\n        const { company, location, contract, apply, description, title, role, technologies,tools, companyLogo, classification, responsabilities, qualifications } = post;\r\n        // const techs = post.technologies;\r\n        // const toolsA = post.tools;\r\n        // const technolgies = techs.map(function (technology) { return technology.language; });\r\n        // const tools = toolsA.map(function (tool) { return tool.name; });\r\n        firestore.collection('posts').add({\r\n            company,\r\n            location,\r\n            contract,\r\n            description,\r\n            apply,\r\n            title,\r\n            role,\r\n            classification,\r\n            technologies,\r\n            tools,\r\n            responsabilities,\r\n            qualifications,\r\n            companyLogo,\r\n            firstName: profile.firstName,\r\n            lastName: profile.lastName,\r\n            userId: authorid,\r\n            postedAt: new Date()\r\n\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_POST', post });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        });\r\n       \r\n    };\r\n};\r\n\r\nexport const deletePost = (post) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('posts').doc(post.id).delete().then(\r\n            () => {\r\n                dispatch({ type: 'DELETE_POST', post});\r\n            }\r\n        ).catch((err) => {\r\n            dispatch({ type: 'DELETE_POST_ERROR', err})\r\n        });\r\n    };\r\n};\r\n\r\nexport const updatePost = (updatedPost, postId) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('posts').doc(postId).update({...updatedPost}).then(\r\n            () => {\r\n                dispatch({ type: 'UPDATE_POST', updatedPost});\r\n            }\r\n        ).catch((err) => {\r\n            dispatch({ type: 'UPDATE_POST_ERROR', err})\r\n        });\r\n    };\r\n};\r\n\r\nexport const filterPostByClassifications = (posts, filteredPostsList, filter) => {\r\n\r\n    const classification = filter ? (filter) : ('');\r\n    var filteredPosts= [];\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const techFilter = getState().post.technologiesFilter;\r\n        const technologyFilter = techFilter ? (techFilter) : (\"\");\r\n        if(technologyFilter === \"\" && filter === null){\r\n            filteredPosts = posts;\r\n        }else if(technologyFilter !== \"\" && filter === null){\r\n                filteredPosts = posts.filter(item => item.technologies.some(obj => obj.id === technologyFilter));}\r\n        else if(technologyFilter === \"\"){\r\n            filteredPosts = posts.filter(item => item.classification === filter.value);\r\n        }else if(technologyFilter !== \"\" && filter){\r\n            const firstList = posts.filter(item => item.classification === filter.value); \r\n            const secondList = firstList.filter(item => item.technologies.some(obj => obj.id === technologyFilter));\r\n            filteredPosts = secondList;\r\n        }else{\r\n            filteredPosts = filteredPostsList.filter(item => item.classification === filter.value); \r\n        }\r\n        dispatch({type:'FILTER_BY_CLASSIFICATIONS_POSTS', payload:{filteredPosts, classification} });\r\n        // const firestore = getFirestore();\r\n        // firestore.collection(\"posts\").where(\"classifications\", \"==\", filter)\r\n        // .get()\r\n        // .then((querySnapshot) => {\r\n        //     querySnapshot.forEach((doc) => {\r\n        //         filteredPosts.push(doc.data());\r\n        //     })\r\n        //     dispatch({type:'FILTER_BY_CLASSIFICATIONS_POSTS', filteredPosts});\r\n        // }\r\n        // ).catch((err)=> {\r\n        //     dispatch({type: 'FILTER_BY_CLASSIFICATIONS_POSTS_ERROR', err})\r\n        // })\r\n    };\r\n};\r\n\r\nexport const filterPostByTechnologies = (posts, filteredPostsList, filter) => {\r\n    const technology = filter ? (filter) : ('');\r\n    var filteredPosts = [];\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const state = getState().post;\r\n        const classFilter = getState().post.classificationFilter;\r\n        const classificationFilter =  classFilter ? (classFilter) : (\"\");\r\n        if(classificationFilter === \"\" && filter === null){\r\n            filteredPosts = posts;\r\n        }else if(classificationFilter !== \"\" && filter === null){\r\n            filteredPosts = posts.filter(item => item.classification === classificationFilter);\r\n        }else if(classificationFilter === \"\"){\r\n            filteredPosts = posts.filter(item => item.technologies.some(obj => obj.id === filter.value) ) \r\n        }else{\r\n            filteredPosts = filteredPostsList.filter(item => item.technologies.some(obj => obj.id === filter.value) );\r\n        }\r\n        dispatch({type:'FILTER_BY_TECHNOLOGIES_POSTS', payload:{filteredPosts, technology} });\r\n\r\n    };\r\n};\r\n\r\nexport const searchPosts = (posts, filteredPostsList, searchTerm) => {\r\n    var filteredPosts = [];\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const classFilter = getState().post.classificationFilter;\r\n        const techFilter = getState().post.technologiesFilter;\r\n        const classificationFilter =  classFilter ? (classFilter) : (\"\");\r\n        const technologyFilter = techFilter ? (techFilter) : (\"\");\r\n\r\n        if(searchTerm === \"\" && classificationFilter === \"\" && technologyFilter=== \"\" ){\r\n            filteredPosts = posts;\r\n        }else if(searchTerm !== \"\" && (classificationFilter !== \"\" || technologyFilter!== \"\") ){\r\n            filteredPosts = filteredPostsList.filter(item => item.title.toLowerCase().includes(searchTerm.toLowerCase()));;\r\n        }else if(searchTerm !== \"\"){\r\n            filteredPosts = posts.filter(item => item.title.toLowerCase().includes(searchTerm.toLowerCase()));;\r\n        }else if(searchTerm === \"\" && (classificationFilter !== \"\" || technologyFilter!== \"\" )){\r\n            if(classificationFilter !== \"\") filteredPosts = posts.filter(item => item.classification === classificationFilter); \r\n            else\r\n                filteredPosts = posts.filter(item => item.technologies.some(obj => obj.id === technologyFilter) );\r\n        }\r\n        dispatch({type:'SEARCH_POSTS', payload:{filteredPosts, searchTerm} });\r\n\r\n    };\r\n};","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\companiesReducer.js",["241"],"const initState = {\r\n    companies: [],\r\n    \r\n};\r\n\r\nconst companiesReducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'ADD_COMPANY':\r\n            console.log('Company added', action.company);\r\n            return state;\r\n        case 'ADD_COMPANY_ERROR':\r\n            console.log('Company add error', action.err);\r\n        case 'UPDATE_COMPANY':\r\n            return state;\r\n        case 'UPDATE_COMPANY_ERROR':\r\n            return state;\r\n        case 'DELETE_COMPANY':\r\n            return state;\r\n        case 'DELETE_COMPANY_ERROR':\r\n            return state.filter((company) => company.id !== action.id);\r\n        default:\r\n            return state;\r\n}\r\n\r\n}\r\n\r\nexport default companiesReducer;","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\authActions.js",["242"],"export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type:'LOGIN_ERROR', err});\r\n        });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    };\r\n};\r\n\r\nexport const recoverPassword = (email) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().sendPasswordResetEmail(email).then(() => {\r\n            window.alert(\"An email has been sent to you! Please check your inbox.\");\r\n            dispatch({type: 'RECOVER_PASSWORD_SUCCESS'});\r\n        }).catch(error => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            window.alert(\"Message:\" + errorMessage)\r\n            dispatch({type: 'RECOVER_PASSWORD_ERROR'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            if (newUser.company) {\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    role:  newUser.role,\r\n                    company: newUser.company,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0]\r\n                });\r\n            } else {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                role:  newUser.role,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            }); }\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        });\r\n    };\r\n\r\n}",["243","244"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\categoriesReducer.js",["245"],"C:\\Users\\dumar\\marketplace\\src\\components\\LandingPage.js",["246","247"],"import React from 'react';\r\nimport backG from '../header-wall.jpg';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport ubbLogo from '../ubbLogo.png';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nconst LandingPage = (props) => {\r\n    const { auth } = props;\r\n\r\n    if(auth.uid) return <Redirect to='/home' />;\r\n    return(  \r\n        <div className=\"grid grid-cols-2 text-white w-full h-full fixed ...\">\r\n             <div className=\"col-span-1 flex flex-wrap items-start justify-center bg-fixed bg-center bg-content bg-no-repeat \" style= {{ backgroundImage: `url('${backG}')` }}>\r\n                 <div className=\"mt-36 flex justify-center w-full\">\r\n                    <div className=\"items-center\">\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"h-8 w-8 fill-current text-red-600 ...\" >\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\">\r\n                                <span>Find Job Opportunities</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className=\"h-8 w-8 fill-current text-red-600 ...\" >\r\n                            <path d=\"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\"><span>Find Project Opportunities</span></h1>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className=\"h-8 w-8 fill-current text-red-600 ...\">\r\n                            <path fillRule=\"evenodd\" d=\"M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\"><span>Find Collaboration Opportunities</span></h1>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n            {/* <img src={backG} alt=\"Mobile Phone\" className=\"w-1/2 object-content\"/> */}\r\n                <div className=\"col-span-1 flex justify-center  bg-blue-400\">\r\n                    <div className=\"w-full text-white flex md:justify-center text-center md:text-left p-52\">\r\n                        <div >\r\n                            <div className=\"flex justify-center\">\r\n                                <h2 className=\"leading-none font-bold text-2xl xs:text-2x1 text-red-600 md:text-4xl lg:6x1 \"><span className=\"text-blue-800\">Welcome to </span>UBB <span className=\"text-blue-800\">Marketplace</span></h2>\r\n                            </div>\r\n                            <div className=\"flex justify-center md:justify-center md:flex  my-12\">\r\n                                <img src={ubbLogo} alt=\"Mobile Phone\" className=\"mx-1\" />\r\n                            </div>\r\n                            <div className=\"flex justify-center\">\r\n                                <NavLink className=\"px-16 w-96 flex justify-center rounded-full bg-blue-800 text-white font-bold p-4 uppercase border-blue-500 border hover:bg-gray-100 hover:text-gray-700\" to='/signup'>\r\n                                    <span>Get started</span>\r\n                                </ NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\classificationsReducer.js",["248"],"const initState = {\r\n    classifications: []\r\n };\r\n \r\n const classificationsReducer = (state = initState, action) => {\r\n     switch (action.type) {\r\n         case 'ADD_CLASSIFICATION':\r\n             console.log('classification created', action.post);\r\n             return state;\r\n         case 'ADD_CLASSIFICATION_ERROR':\r\n             console.log('create classification error', action.err);\r\n         case 'DELETE_CLASSIFICATION':\r\n             return state.filter((classification) => classification.id !== action.id);\r\n         case 'DELETE_CLASSIFICATION_ERROR':\r\n             return state;\r\n         default:\r\n             return state; }\r\n }\r\n\r\nexport default classificationsReducer;\r\n","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\technologiesReducer.js",["249"],"C:\\Users\\dumar\\marketplace\\src\\components\\MyPosts.js",["250"],"C:\\Users\\dumar\\marketplace\\src\\components\\EditPost.js",["251","252","253","254","255","256","257","258","259","260"],"C:\\Users\\dumar\\marketplace\\src\\components\\Profile.js",["261","262"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    render(){\r\n        const { profile, auth } = this.props;\r\n        return(\r\n        <div className=\" grid grid-cols-3\">\r\n             <div className='col-start-1 col-span-3 bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                        <div className='bg-blue-600 bg-transparent bg-opacity-30 '>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Profile</span>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            <div className=\"col-start-2 col-span-1\">\r\n                <form className=\"w-full\">\r\n                <div className=\"flex justify-center w-full\">\r\n                                <div className=\"rounded-full bg-gradient-to-r from-green-400 to-blue-500 ... text-2xl font-bold p-10  cursor-pointer focus:outline-none\" onClick={() => this.handleDropdown()} >\r\n                                    RD\r\n                                </div>\r\n                            </div>\r\n                    <div className=\"md:inline-flex space-y-4 md:space-y-0 w-full p-4 text-gray-500 items-center\">\r\n                        <h2 className=\"md:w-1/3 max-w-sm mx-auto\">Account</h2>\r\n                        <div className=\"md:w-2/3 max-w-sm mx-auto\">\r\n                        <label className=\"text-sm text-gray-400\">Email</label>\r\n                        <div className=\"w-full inline-flex border rounded\">\r\n                            <div className=\"pt-2 w-1/12 bg-gray-100 bg-opacity-50\">\r\n                            <svg\r\n                                fill=\"none\"\r\n                                className=\"w-6 text-gray-400 mx-auto\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                            >\r\n                                <path\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                stroke-width=\"2\"\r\n                                d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                                />\r\n                            </svg>\r\n                            </div>\r\n                            <input\r\n                            type=\"email\"\r\n                            value={auth.email}\r\n                            className=\"w-11/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                            placeholder=\"email@example.com\"\r\n                            disabled\r\n                            />\r\n                        </div>\r\n                        </div>\r\n                 </div>\r\n\r\n                    <div className=\"md:inline-flex  space-y-4 md:space-y-0  w-full p-4 text-gray-500 items-center\">\r\n                        <h2 className=\"md:w-1/3 mx-auto max-w-sm\">Personal info</h2>\r\n                        <div className=\"md:w-2/3 mx-auto max-w-sm space-y-5\">\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-400\">Name</label>\r\n                            <div className=\"flex\">\r\n                                <div className=\"w-full mr-6 inline-flex border rounded\">\r\n                                <div className=\"w-2/12 pt-2 bg-gray-100\">\r\n                                    <svg\r\n                                    fill=\"none\"\r\n                                    className=\"w-5 text-gray-400 mx-auto\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                    >\r\n                                    <path\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        stroke-width=\"2\"\r\n                                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                                    />\r\n                                    </svg>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={profile.firstName}\r\n                                    className=\"w-10/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n                                </div>\r\n                                <div className=\"w-full inline-flex border rounded\">\r\n                                <div className=\"w-2/12 pt-2 bg-gray-100\">\r\n                                    <svg\r\n                                    fill=\"none\"\r\n                                    className=\"w-5 text-gray-400 mx-auto\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                    >\r\n                                    <path\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        stroke-width=\"2\"\r\n                                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                                    />\r\n                                    </svg>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={profile.lastName}\r\n                                    className=\"w-10/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                    placeholder=\"Last Name\"\r\n                                />\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-400\">Phone number</label>\r\n                            <div className=\"w-full inline-flex   border rounded\">\r\n                            <div className=\"pt-2 w-1/12 bg-gray-100 \">\r\n                                <svg\r\n                                fill=\"none\"\r\n                                className=\"w-6 text-gray-400 mx-auto\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                                >\r\n                                <path\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                    stroke-width=\"2\"\r\n                                    d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\r\n                                />\r\n                                </svg>\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"w-11/12 focus:outline-none  focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                placeholder=\"12341234\"\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-full flex justify-center mt-20\">\r\n                        <button className=\"w-64 mx-20 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-3 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M17.561,2.439c-1.442-1.443-2.525-1.227-2.525-1.227L8.984,7.264L2.21,14.037L1.2,18.799l4.763-1.01\r\n                                        l6.774-6.771l6.052-6.052C18.788,4.966,19.005,3.883,17.561,2.439z M5.68,17.217l-1.624,0.35c-0.156-0.293-0.345-0.586-0.69-0.932\r\n                                        c-0.346-0.346-0.639-0.533-0.932-0.691l0.35-1.623l0.47-0.469c0,0,0.883,0.018,1.881,1.016c0.997,0.996,1.016,1.881,1.016,1.881\r\n                                        L5.68,17.217z\"/>\r\n                                        </svg>\r\n                                        Update Profile\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        profile: state.firebase.profile,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);",["263","264"],"C:\\Users\\dumar\\marketplace\\src\\components\\AppSettings.js",["265","266"],"import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { addCategory, deleteCategory } from '../store/actions/categoriesActions';\r\nimport { addClassification, deleteClassification } from '../store/actions/classificationActions';\r\nimport { addTechnology, deleteTechnology } from '../store/actions/techonolgiesActions';\r\nimport { addTool, deleteTool } from '../store/actions/toolsActions';\r\n\r\n\r\nclass AppSettings extends React.Component{\r\n\r\n    state = {\r\n        display: '',\r\n        idSelectedTech: '',\r\n        input: false,\r\n        inputField: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            display: 'categories',\r\n            idSelectedTech: ''\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            display: e.target.value\r\n        });\r\n    }\r\n\r\n    handleAddChange = (e) =>{\r\n        this.setState({\r\n            inputField: e.target.value\r\n        });\r\n    }\r\n\r\n    handleCategoryDelete = (category) => {\r\n        this.props.deleteCategory(category);\r\n    }\r\n\r\n    handleClassificationDelete = (classification) => {\r\n        this.props.deleteClassification(classification);\r\n    }\r\n\r\n    handleTechnologyDelete = (technology) => {\r\n        this.props.deleteTechnology(technology);\r\n    }\r\n\r\n    handleToolDelete = (tool) => {\r\n        this.props.deleteTool(tool);\r\n    }\r\n\r\n    handleAddTools = (e) => {\r\n        this.setState({\r\n            display: 'tools',\r\n            idSelectedTech: e\r\n        });\r\n    }\r\n\r\n    handleAddTableEntry = () =>{\r\n        if(this.state.input === false)\r\n            this.setState({\r\n                input: true\r\n            });\r\n      \r\n        \r\n    }\r\n\r\n    handleCreate = () => {\r\n           if(this.state.display ==='categories'){\r\n                const category = {\r\n                    name: this.state.inputField\r\n                }\r\n                this.props.addCategory(category);\r\n                this.setState({\r\n                    input:false\r\n                }); }else if(this.state.display === 'technologies'){\r\n                const technology = {\r\n                    language: this.state.inputField\r\n                }\r\n                this.props.addTechnology(technology);\r\n                this.setState({\r\n                    input:false\r\n                }); }else if (this.state.display === 'classifications'){\r\n            \r\n                const classification = {\r\n                    name: this.state.inputField\r\n                }\r\n                this.props.addClassification(classification);\r\n                this.setState({\r\n                    input:false\r\n                }); }else if(this.state.display === 'tools'){\r\n                const tool = {\r\n                    name: this.state.inputField,\r\n                    relatedTech: this.state.idSelectedTech\r\n                }\r\n                this.props.addTool(tool);   \r\n                this.setState({\r\n                    input:false\r\n                }); \r\n            }\r\n         \r\n        \r\n        // switch (this.state.display) {\r\n        //     case 'categories':\r\n        //         const category = {\r\n        //             name: this.state.inputField\r\n        //         }\r\n        //         this.props.addCategory(category);\r\n        //         this.setState({\r\n        //             input:false\r\n        //         });\r\n        //     case 'technologies':\r\n        //         const technology = {\r\n        //             language: this.state.inputField\r\n        //         }\r\n        //         this.props.addTechnology(technology);\r\n        //         this.setState({\r\n        //             input:false\r\n        //         });\r\n        //     case 'classifications':\r\n        //         const classification = {\r\n        //             name: this.state.inputField\r\n        //         }\r\n        //         this.props.addClassification(classification);\r\n        //         this.setState({\r\n        //             input:false\r\n        //         });\r\n        //     case 'tools':\r\n        //         const tool = {\r\n        //             name: this.state.inputField,\r\n        //             relatedTech: this.state.idSelectedTech\r\n        //         }\r\n        //         this.props.addTool(tool);   \r\n        //         this.setState({\r\n        //             input:false\r\n        //         });\r\n                \r\n        // }\r\n    }\r\n    \r\n    render() {\r\n        const { auth, categories, classifications, technologies, tools } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return(\r\n            <div className=\"mx-32 mt-10\">\r\n                <div className=\"my-2 flex sm:flex-row flex-col\">\r\n                    <div className=\"flex flex-row mb-1 sm:mb-0 w-full\">\r\n                        <label className=\"text-gray-500 font-bold mr-3 my-2\"> Manage </label>\r\n                        <div className=\"relative w-52 border round border-1 border-gray-400\">\r\n                            <select value={this.state.display}\r\n                                    onChange={this.handleChange}\r\n                                className=\"appearance-none h-full rounded-r  sm:rounded-r-none sm:border-r-0  block appearance-none w-full bg-white text-gray-700 py-2 px-4 pr-8 leading-tight focus:outline-none focus:border-l focus:border-r focus:bg-white focus:border-gray-500\">\r\n                                <option value=\"categories\">Categories</option>\r\n                                <option value=\"classifications\">Classifications</option>\r\n                                <option value=\"technologies\">Technologies</option>\r\n                            </select>\r\n                            <div\r\n                                className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n                                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex w-full justify-end\">\r\n                            <div>\r\n                            <button onClick={this.handleAddTableEntry} className=\"bg-blue-800 focus:outline-none text-white pl-2 pr-5 py-2 rounded-full border border-blue-600  hover:bg-blue-500 mx-2 hover:text-gray-100\" >\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" className=\"w-6 h-6 mr-1 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                            C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                            C15.952,9,16,9.447,16,10z\" />\r\n                                        </svg>\r\n                                        Add\r\n                                    </button>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n        <div class=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n            <table class=\"min-w-full leading-normal\">\r\n                <thead>\r\n                    <tr>\r\n                        {this.state.display === \"categories\" &&\r\n                        <th\r\n                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Category\r\n                        </th> }\r\n                        {this.state.display === \"classifications\" &&\r\n                        <th\r\n                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Classifications\r\n                        </th> }\r\n                        {this.state.display === \"technologies\" &&\r\n                        <th\r\n                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Technologies\r\n                        </th> }\r\n                        {this.state.display === \"tools\" &&\r\n                        <th\r\n                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Tools\r\n                        </th> }\r\n                        <th\r\n                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Created By\r\n                        </th>\r\n                        <th\r\n                            class=\"pl-3 pr-10 py-3 border-b-2 border-gray-200 bg-gray-100 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                            Actions\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*---------------------------------------- Input Line hidden -------------------------------------- */}\r\n                { this.state.input === true &&\r\n                        <tr>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <div class=\"flex items-center\">\r\n                                <div class=\"ml-3\">\r\n                                <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 border border-2 border-gray-400 rounded\" onChange={this.handleAddChange} id=\"input\" type=\"text\"  placeholder=\"Enter here....\" required=\"\" />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p class=\"text-gray-900 whitespace-no-wrap\">Admin</p>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                        <div className='flex flex-wrap \r\n                                justify-end mt-4 mx-4 pt-4 border-t \r\n                                border-gray-300 border-solid\r\n                                sm:ml-10 sm:border-0 sm:pt-0 sm:mt-0'>\r\n                            <button className=\"inline-block p-3 ml-3 text-center text-white transition bg-blue-400 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" onClick={this.handleCreate} >\r\n                                <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" className=\"w-6 h-6 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                            C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                            C15.952,9,16,9.447,16,10z\" />\r\n                                </svg>\r\n                            </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>     \r\n                }\r\n                    { this.state.display === \"categories\" &&\r\n                    categories.map(category => (\r\n                        <tr>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <div class=\"flex items-center\">\r\n                                <div class=\"ml-3\">\r\n                                    <p class=\"text-gray-900 whitespace-no-wrap\">\r\n                                       {category.name}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p class=\"text-gray-900 whitespace-no-wrap\">Admin</p>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                        <div className='flex flex-wrap \r\n                                justify-end mt-4 mx-4 pt-4 border-t \r\n                                border-gray-300 border-solid\r\n                                sm:ml-10 sm:border-0 sm:pt-0 sm:mt-0'>\r\n                            <button className=\"inline-block p-3 ml-3 text-center text-white transition bg-red-600 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" onClick={(e) => this.handleCategoryDelete(category)} >\r\n                                <svg className=\"w-5 h-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                                    clip-rule=\"evenodd\"/>\r\n                                </svg>\r\n                            </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    ))\r\n                    \r\n                }\r\n                 { this.state.display === \"classifications\" &&\r\n                    classifications.map(classification => (\r\n                        <tr key={classification.id}>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <div class=\"flex items-center\">\r\n                                <div class=\"ml-3\">\r\n                                    <p class=\"text-gray-900 whitespace-no-wrap\">\r\n                                       {classification.name}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p class=\"text-gray-900 whitespace-no-wrap\">Admin</p>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                        <div className='flex flex-wrap \r\n                                justify-end mt-4 mx-4 pt-4 border-t \r\n                                border-gray-300 border-solid\r\n                                sm:ml-10 sm:border-0 sm:pt-0 sm:mt-0'> \r\n                            <button className=\"inline-block p-3 ml-3 text-center text-white transition bg-red-600 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" onClick={(e) => this.handleClassificationDelete(classification)}>\r\n                                <svg className=\"w-5 h-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                                    clip-rule=\"evenodd\"/>\r\n                                </svg>\r\n                            </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    ))                  \r\n                }\r\n                 { this.state.display === \"technologies\" &&\r\n                    technologies.map(technology => (\r\n                        <tr>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <div class=\"flex items-center\">\r\n                                <div class=\"ml-3\">\r\n                                    <p class=\"text-gray-900 whitespace-no-wrap\">\r\n                                       {technology.language}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p class=\"text-gray-900 whitespace-no-wrap\">Admin</p>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                        <div className='flex flex-wrap \r\n                                justify-end mt-4 mx-4 pt-4 border-t \r\n                                border-gray-300 border-solid\r\n                                sm:ml-10 sm:border-0 sm:pt-0 sm:mt-0'>\r\n                                <button  onClick={(e) => this.handleAddTools(technology.id)} className=\"bg-blue-800 text-white pl-2 pr-5 py-2 rounded border border-blue-600  hover:bg-blue-500 mx-2 hover:text-gray-100\" >\r\n                                    <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" className=\"w-6 h-6 mr-1 inline-block\">\r\n                                    <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                        C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                        C15.952,9,16,9.447,16,10z\" />\r\n                                    </svg>\r\n                                    Add/Edit Tools\r\n                                </button>\r\n                            <button className=\"inline-block p-3 ml-3 text-center text-white transition bg-red-600 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" onClick={(e) => this.handleTechnologyDelete(technology)} >\r\n                                <svg className=\"w-5 h-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                                    clip-rule=\"evenodd\"/>\r\n                                </svg>\r\n                            </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    ))\r\n                    \r\n                }\r\n                 { this.state.display === \"tools\" &&\r\n                    tools.map(tool => {\r\n                        if(tool.relatedTech === this.state.idSelectedTech)\r\n                        return (<tr>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <div class=\"flex items-center\">\r\n                                <div class=\"ml-3\">\r\n                                    <p class=\"text-gray-900 whitespace-no-wrap\">\r\n                                       {tool.name}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p class=\"text-gray-900 whitespace-no-wrap\">Admin</p>\r\n                        </td>\r\n                        <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                        <div className='flex flex-wrap \r\n                                justify-end mt-4 mx-4 pt-4 border-t \r\n                                border-gray-300 border-solid\r\n                                sm:ml-10 sm:border-0 sm:pt-0 sm:mt-0'>\r\n                            <button className=\"inline-block p-3 ml-3 text-center text-white transition bg-red-600 rounded-full shadow ripple hover:shadow-lg hover:bg-gray-200 focus:outline-none\" onClick={(e) => this.handleToolDelete(tool)} >\r\n                                <svg className=\"w-5 h-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                <path\r\n                                    fill-rule=\"evenodd\"\r\n                                    d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n                                    clip-rule=\"evenodd\"/>\r\n                                </svg>\r\n                            </button>\r\n                            </div>\r\n                        </td>\r\n                    </tr> );\r\n                    }\r\n                    )\r\n                    \r\n                }\r\n                \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div> \r\n    </div>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        categories: state.firestore.ordered.categories || [],\r\n        classifications: state.firestore.ordered.classifications || [],\r\n        technologies: state.firestore.ordered.technologies || [],\r\n        tools: state.firestore.ordered.tools || []\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCategory: (category) => dispatch(addCategory(category)),\r\n        deleteCategory: (category) => dispatch(deleteCategory(category)),\r\n        addClassification: (classification) => dispatch(addClassification(classification)),\r\n        deleteClassification: (classification) => dispatch(deleteClassification(classification)),\r\n        addTechnology: (technology) => dispatch(addTechnology(technology)),\r\n        deleteTechnology: (technology) => dispatch(deleteTechnology(technology)),\r\n        addTool: (tool) => dispatch(addTool(tool)),\r\n        deleteTool: (tool) => dispatch(deleteTool(tool))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\"categories\",\"classifications\", \"technologies\", \"tools\"])\r\n   )(AppSettings);","C:\\Users\\dumar\\marketplace\\src\\components\\Partners.js",["267"],"C:\\Users\\dumar\\marketplace\\src\\components\\CompanyPostComponent.js",[],"C:\\Users\\dumar\\marketplace\\src\\components\\AddCompany.js",["268"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addCompany } from '../store/actions/companiesAction';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport firebase from '../config/fbConfig';\r\n\r\nclass AddCompany extends React.Component{\r\n\r\n    state = {\r\n        name: '',\r\n        headquarters: '',\r\n        industry: '',\r\n        size: '',\r\n        website: '',\r\n        description: '',\r\n        fileUrl: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    handleFileUpload = async (e) => {\r\n\r\n        const file = e.target.files[0];\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        await fileRef.put(file);\r\n        const fileUrl = await fileRef.getDownloadURL();\r\n\r\n        this.setState({\r\n            fileUrl: fileUrl\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // We pass the post we want to create which is the state of the component after we submit the form\r\n        this.props.addCompany(this.state);\r\n        this.props.history.push('/partners');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n    <div>\r\n            <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n            <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                <div className='ml-80 py-20' >\r\n                    <span className='text-4xl fond-bold'>Add Company</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"grid grid-cols-6 gap-4\">\r\n                <div className=\"col-start-3 col-end-5 max-w-xl m-4 p-10 bg-white rounded shadow-xl\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <p className=\"text-gray-800 text-2xl my-4 font-medium\">Company Information</p>\r\n                        <div className=\"\">\r\n                            <label className=\"block text-sm text-gray-00 font-semibold\" for=\"cus_name\">Name</label>\r\n                            <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded\" id=\"name\" onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Company Name\"/>\r\n                        </div>\r\n                        <div class=\"mt-2\">\r\n                            <label className=\"block text-sm text-gray-600 font-semibold\" for=\"cus_email\">Headquarters Location</label>\r\n                            <input className=\"w-full px-2  py-4 text-gray-700 bg-gray-200 rounded\" id=\"headquarters\" onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Headquarters\" />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className=\" block text-sm text-gray-600 font-semibold\"  for=\"cus_email\">Industry</label>\r\n                            <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" id=\"industry\" onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Industry\" />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"text-sm block text-gray-600 font-semibold\" for=\"cus_email\">Size (Employees)</label>\r\n                            <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" id=\"size\" onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Size\"/>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"block text-sm text-gray-600 font-semibold\" font-semibold for=\"cus_email\">Website</label>\r\n                            <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" id=\"website\" onChange={this.handleChange}  type=\"text\" required=\"\" placeholder=\"Website\" />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className='block text-lg font-semibold  text-gray-600'>Description</label>\r\n                            <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"description\" onChange={this.handleChange} placeholder='Description' />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className='block text-lg font-semibold  text-gray-00'>Add File</label>\r\n                            <input type=\"file\" onChange={this.handleFileUpload} />\r\n                        </div>\r\n                        <div className=\"mt-5 flex justiy-center\">\r\n                            <button onClick={this.handleChange} className=\"w-full mx-5 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-1 inline-block\">\r\n                                <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                    C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                    C15.952,9,16,9.447,16,10z\" />\r\n                                </svg>\r\n                                Add Company\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCompany: (company) => dispatch(addCompany(company))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n connect(null, mapDispatchToProps),\r\n)(AddCompany);","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\companiesAction.js",["269","270"],"import { constants } from \"react-redux-firebase\";\r\n\r\nexport const addCompany = (company) => {\r\n    // because we added withExtraagument to thunk in index.js, we can now pass one more Argument to the thunk return statement\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        // const profile = getState().firebase.profile;\r\n        // const authorid = getState().firebase.auth.uid;\r\n        const { name, headquarters, industry, size, website, description, fileUrl } = company;\r\n        \r\n        firestore.collection('companies').add({\r\n            name,\r\n            headquarters,\r\n            industry,\r\n            size,\r\n            website,\r\n            description,\r\n            fileUrl\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_COMPANY', company });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_COMPANY_ERROR', err})\r\n        });\r\n       \r\n    };\r\n};\r\n\r\n\r\nexport const deleteCompany = (company) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('companies').doc(company.id).delete().then(\r\n            () => {\r\n                dispatch({ type: 'DELETE_COMPANY', company});\r\n            }\r\n        ).catch((err) => {\r\n            dispatch({ type: 'DELETE_COMPANY_ERROR', err})\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateCompany = (updatedCompany, companyId) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('companies').doc(companyId).update({...updatedCompany}).then(\r\n            () => {\r\n                dispatch({ type: 'UPDATE_COMPANY', updatedCompany});\r\n            }\r\n        ).catch((err) => {\r\n            dispatch({ type: 'UPDATE_COMPANY_ERROR', err})\r\n        });\r\n    };\r\n};\r\n","C:\\Users\\dumar\\marketplace\\src\\components\\EditCompany.js",["271","272","273","274","275","276","277"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\categoriesActions.js",["278"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\toolsReducer.js",["279"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\toolsActions.js",["280"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\techonolgiesActions.js",["281"],"import { constants } from \"react-redux-firebase\";\r\n\r\nexport const addTechnology = (technology) => {\r\n    // because we added withExtraagument to thunk in index.js, we can now pass one more Argument to the thunk return statement\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n\r\n        const { language } = technology;\r\n    \r\n        firestore.collection('technologies').add({\r\n            language\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_TECHNOLOGY', technology });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_TECHNOLOGY_ERROR', err})\r\n        });\r\n       \r\n    };\r\n};\r\n\r\n\r\nexport const deleteTechnology = (technology) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('technologies').doc(technology.id).delete().then(\r\n            () => {\r\n                dispatch({ type: 'DELETE_TECHNOLOGY', technology});\r\n            }\r\n        ).catch((err) => {\r\n            dispatch({ type: 'DELETE_TECHNOLOGY_ERROR', err})\r\n        });\r\n    };\r\n};\r\n","C:\\Users\\dumar\\marketplace\\src\\components\\Notifications.js",["282","283"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    if(notifications.length === 0){\r\n    return(\r\n        <div class=\"absolute right-0 mt-2 bg-white rounded-md shadow-lg overflow-hidden z-20 mr-20\">\r\n        <div  class=\"block bg-gradient-to-r from-green-400 to-blue-500 ... text-white text-center font-bold py-2 px-4\">Latest Posts</div>\r\n       <div class=\"py-2\">\r\n         <span className=\"ml-3\">No activity</span>\r\n       </div>\r\n   </div> \r\n    ); }\r\n    return(\r\n        <div class=\"absolute right-0 mt-2 bg-white rounded-md shadow-lg overflow-hidden z-20 mr-20\">\r\n             <div  class=\"block bg-gradient-to-r from-green-400 to-blue-500 ... text-white text-center font-bold py-2\">Latest Posts</div>\r\n            <div class=\"py-2\">\r\n                {notifications && notifications.map(item => {\r\n                    return (\r\n                        <a href=\"#\" class=\"flex items-center px-4 py-3 border-b hover:bg-gray-100 -mx-2\">\r\n                            <p class=\"text-gray-600 text-sm mx-2\">\r\n                            <span class=\"font-bold\" >{item.user}({item.company})</span> added <Link to={'/post/' + item.postId}><span class=\"font-bold text-blue-500\" >{item.title}</span> </Link>\r\n                            </p>\r\n                        </a>\r\n                    );\r\n                } )}\r\n            </div>\r\n        </div> \r\n        );\r\n}\r\n\r\nexport default Notifications;","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\classificationActions.js",["284"],"C:\\Users\\dumar\\marketplace\\src\\components\\Pagination.js",["285"],"import React from 'react';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n\t        <ul className=\"flex w-full justify-center list-none rounded my-2\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"relative block px-1 py-2 leading-tight bg-white border border-gray-300 text-blue-700 border-r-0 hover:bg-gray-200\">\r\n                        <a onClick={() => paginate(number)} className=\"page-link py-5 px-5\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n\t        </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","C:\\Users\\dumar\\marketplace\\src\\components\\RecoverPassord.js",["286","287"],"import React from 'react';\r\nimport ubbLogo from '../ubb.png';\r\nimport backG from '../header-wall.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { recoverPassword } from '../store/actions/authActions';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass RecoverPassword extends React.Component {\r\n\r\n    state = {\r\n        email: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.recoverPassword(this.state.email);\r\n        this.props.history.push('/signin');\r\n      \r\n    }\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div className=\"grid grid-cols-6 w-full h-full place-items-center bg-fixed  bg-center bg-cover bg-no-repeat fixed ...\" style= {{ backgroundImage: `url('${backG}')` }}>\r\n        <div className=\"col-start-2 col-span-4 p-12 bg-blue-600 mb-5 rounded-lg shadow-xl bg-transparent bg-opacity-60 sm:w-8/12 md:w-1/2 lg:w-7/12\">\r\n            <form className=\"\" onSubmit={this.handleSubmit}>\r\n                {/* <div className=\"flex justify-center mb-5\"><img className=\"w-36 h-36 bg-white rounded-full\" src={ubbLogo}  /></div> */}\r\n                <h1 className=\"text-3xl w-full font-bold text-dark flex justify-start mb-5 \"><span>Recover Password</span></h1>\r\n                <label for=\"email\" className=\"block text-s font-bold text-dark uppercase\">E-mail</label>\r\n                <input id=\"email\" type=\"email\" name=\"email\"   onChange={this.handleChange} className=\"block rounded-lg w-full p-3 mt-2 text-gray-700 bg-gray-200 appearance-none focus:outline-none focus:bg-gray-300 focus:shadow-inner\" required />\r\n                <button type=\"submit\" className=\"w-full py-3 mt-6 font-medium tracking-widest rounded-md text-white uppercase bg-blue-800 shadow-lg focus:outline-none hover:bg-gray-900 hover:shadow-none\">\r\n                   Reset Password\r\n                </button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    ); }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        recoverPassword: (email) => dispatch(recoverPassword(email))\r\n    };\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(RecoverPassword);\r\n\r\n",["288","289"],{"ruleId":"290","severity":1,"message":"291","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"294","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":14},{"ruleId":"290","severity":1,"message":"295","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":17},{"ruleId":"290","severity":1,"message":"296","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":16},{"ruleId":"290","severity":1,"message":"297","line":17,"column":13,"nodeType":"292","messageId":"293","endLine":17,"endColumn":26},{"ruleId":"298","severity":1,"message":"299","line":26,"column":37,"nodeType":"300","endLine":26,"endColumn":117},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"290","severity":1,"message":"305","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":25},{"ruleId":"290","severity":1,"message":"306","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":16},{"ruleId":"290","severity":1,"message":"295","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":17},{"ruleId":"290","severity":1,"message":"307","line":12,"column":8,"nodeType":"292","messageId":"293","endLine":12,"endColumn":15},{"ruleId":"301","replacedBy":"308"},{"ruleId":"303","replacedBy":"309"},{"ruleId":"290","severity":1,"message":"291","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"310","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":12},{"ruleId":"290","severity":1,"message":"311","line":5,"column":19,"nodeType":"292","messageId":"293","endLine":5,"endColumn":27},{"ruleId":"290","severity":1,"message":"312","line":44,"column":15,"nodeType":"292","messageId":"293","endLine":44,"endColumn":17},{"ruleId":"290","severity":1,"message":"313","line":51,"column":11,"nodeType":"292","messageId":"293","endLine":51,"endColumn":16},{"ruleId":"301","replacedBy":"314"},{"ruleId":"303","replacedBy":"315"},{"ruleId":"298","severity":1,"message":"299","line":35,"column":67,"nodeType":"300","endLine":35,"endColumn":133},{"ruleId":"301","replacedBy":"316"},{"ruleId":"303","replacedBy":"317"},{"ruleId":"290","severity":1,"message":"318","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":15},{"ruleId":"290","severity":1,"message":"319","line":18,"column":39,"nodeType":"292","messageId":"293","endLine":18,"endColumn":47},{"ruleId":"290","severity":1,"message":"320","line":18,"column":72,"nodeType":"292","messageId":"293","endLine":18,"endColumn":85},{"ruleId":"290","severity":1,"message":"321","line":18,"column":87,"nodeType":"292","messageId":"293","endLine":18,"endColumn":99},{"ruleId":"290","severity":1,"message":"322","line":18,"column":101,"nodeType":"292","messageId":"293","endLine":18,"endColumn":106},{"ruleId":"298","severity":1,"message":"299","line":51,"column":33,"nodeType":"300","endLine":51,"endColumn":123},{"ruleId":"290","severity":1,"message":"323","line":130,"column":13,"nodeType":"292","messageId":"293","endLine":130,"endColumn":29},{"ruleId":"290","severity":1,"message":"324","line":2,"column":19,"nodeType":"292","messageId":"293","endLine":2,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":115,"column":29,"nodeType":"300","endLine":115,"endColumn":193},{"ruleId":"290","severity":1,"message":"327","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":25},{"ruleId":"290","severity":1,"message":"328","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"329","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":12},{"ruleId":"290","severity":1,"message":"291","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":13},{"ruleId":"290","severity":1,"message":"330","line":58,"column":29,"nodeType":"292","messageId":"293","endLine":58,"endColumn":37},{"ruleId":"290","severity":1,"message":"331","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"301","replacedBy":"332"},{"ruleId":"303","replacedBy":"333"},{"ruleId":"334","severity":1,"message":"335","line":28,"column":20,"nodeType":"336","messageId":"337","endLine":28,"endColumn":21,"fix":"338"},{"ruleId":"334","severity":1,"message":"335","line":34,"column":20,"nodeType":"336","messageId":"337","endLine":34,"endColumn":21,"fix":"339"},{"ruleId":"340","severity":1,"message":"341","line":17,"column":9,"nodeType":"342","messageId":"343","endLine":18,"endColumn":26},{"ruleId":"290","severity":1,"message":"344","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"290","severity":1,"message":"345","line":109,"column":15,"nodeType":"292","messageId":"293","endLine":109,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":14,"column":9,"nodeType":"342","messageId":"343","endLine":15,"endColumn":26},{"ruleId":"290","severity":1,"message":"346","line":33,"column":17,"nodeType":"292","messageId":"293","endLine":33,"endColumn":26},{"ruleId":"301","replacedBy":"347"},{"ruleId":"303","replacedBy":"348"},{"ruleId":"340","severity":1,"message":"341","line":12,"column":10,"nodeType":"342","messageId":"343","endLine":13,"endColumn":75},{"ruleId":"290","severity":1,"message":"349","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":17},{"ruleId":"290","severity":1,"message":"350","line":7,"column":10,"nodeType":"292","messageId":"293","endLine":7,"endColumn":26},{"ruleId":"340","severity":1,"message":"341","line":12,"column":10,"nodeType":"342","messageId":"343","endLine":13,"endColumn":87},{"ruleId":"340","severity":1,"message":"341","line":12,"column":10,"nodeType":"342","messageId":"343","endLine":13,"endColumn":79},{"ruleId":"290","severity":1,"message":"351","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"352","line":39,"column":15,"nodeType":"292","messageId":"293","endLine":39,"endColumn":22},{"ruleId":"290","severity":1,"message":"330","line":156,"column":26,"nodeType":"292","messageId":"293","endLine":156,"endColumn":34},{"ruleId":"290","severity":1,"message":"319","line":156,"column":36,"nodeType":"292","messageId":"293","endLine":156,"endColumn":44},{"ruleId":"290","severity":1,"message":"353","line":156,"column":46,"nodeType":"292","messageId":"293","endLine":156,"endColumn":57},{"ruleId":"290","severity":1,"message":"354","line":156,"column":59,"nodeType":"292","messageId":"293","endLine":156,"endColumn":64},{"ruleId":"290","severity":1,"message":"355","line":156,"column":66,"nodeType":"292","messageId":"293","endLine":156,"endColumn":71},{"ruleId":"290","severity":1,"message":"356","line":156,"column":73,"nodeType":"292","messageId":"293","endLine":156,"endColumn":77},{"ruleId":"290","severity":1,"message":"357","line":156,"column":116,"nodeType":"292","messageId":"293","endLine":156,"endColumn":132},{"ruleId":"290","severity":1,"message":"358","line":156,"column":134,"nodeType":"292","messageId":"293","endLine":156,"endColumn":148},{"ruleId":"290","severity":1,"message":"323","line":157,"column":13,"nodeType":"292","messageId":"293","endLine":157,"endColumn":29},{"ruleId":"290","severity":1,"message":"350","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":26},{"ruleId":"290","severity":1,"message":"349","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":17},{"ruleId":"301","replacedBy":"359"},{"ruleId":"303","replacedBy":"360"},{"ruleId":"290","severity":1,"message":"361","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":17},{"ruleId":"362","severity":1,"message":"363","line":361,"column":36,"nodeType":"364","messageId":"365","endLine":361,"endColumn":38},{"ruleId":"290","severity":1,"message":"351","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":14},{"ruleId":"290","severity":1,"message":"350","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":26},{"ruleId":"290","severity":1,"message":"344","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"290","severity":1,"message":"366","line":7,"column":15,"nodeType":"292","messageId":"293","endLine":7,"endColumn":23},{"ruleId":"290","severity":1,"message":"367","line":27,"column":15,"nodeType":"292","messageId":"293","endLine":27,"endColumn":25},{"ruleId":"290","severity":1,"message":"353","line":67,"column":17,"nodeType":"292","messageId":"293","endLine":67,"endColumn":28},{"ruleId":"290","severity":1,"message":"368","line":67,"column":30,"nodeType":"292","messageId":"293","endLine":67,"endColumn":42},{"ruleId":"290","severity":1,"message":"369","line":67,"column":44,"nodeType":"292","messageId":"293","endLine":67,"endColumn":52},{"ruleId":"290","severity":1,"message":"370","line":67,"column":54,"nodeType":"292","messageId":"293","endLine":67,"endColumn":58},{"ruleId":"290","severity":1,"message":"371","line":67,"column":60,"nodeType":"292","messageId":"293","endLine":67,"endColumn":64},{"ruleId":"290","severity":1,"message":"372","line":67,"column":66,"nodeType":"292","messageId":"293","endLine":67,"endColumn":73},{"ruleId":"290","severity":1,"message":"344","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"340","severity":1,"message":"341","line":12,"column":9,"nodeType":"342","messageId":"343","endLine":13,"endColumn":66},{"ruleId":"290","severity":1,"message":"344","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"290","severity":1,"message":"344","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"290","severity":1,"message":"361","line":2,"column":16,"nodeType":"292","messageId":"293","endLine":2,"endColumn":23},{"ruleId":"325","severity":1,"message":"373","line":21,"column":25,"nodeType":"300","endLine":21,"endColumn":106},{"ruleId":"290","severity":1,"message":"344","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"325","severity":1,"message":"326","line":15,"column":25,"nodeType":"300","endLine":15,"endColumn":93},{"ruleId":"290","severity":1,"message":"374","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":15},{"ruleId":"290","severity":1,"message":"311","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":18},{"ruleId":"301","replacedBy":"375"},{"ruleId":"303","replacedBy":"376"},"no-unused-vars","'backG' is defined but never used.","Identifier","unusedVar","'avatar' is defined but never used.","'FilterBar' is defined but never used.","'Dropdown' is defined but never used.","'defaultOption' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["377"],"no-negated-in-lhs",["378"],"'JobBoardComponent' is defined but never used.","'HomePage' is defined but never used.","'Landing' is defined but never used.",["377"],["378"],"'logo' is defined but never used.","'Redirect' is defined but never used.","'db' is assigned a value but never used.","'isNew' is assigned a value but never used.",["377"],["378"],["377"],["378"],"'jobLogo' is defined but never used.","'contract' is assigned a value but never used.","'cassification' is assigned a value but never used.","'technologies' is assigned a value but never used.","'tools' is assigned a value but never used.","'dataTechnologies' is assigned a value but never used.","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is defined but never used.","'location' is assigned a value but never used.","'SignedInLinks' is defined but never used.",["377"],["378"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"379","text":"380"},{"range":"381","text":"380"},"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'constants' is defined but never used.","'state' is assigned a value but never used.","'errorCode' is assigned a value but never used.",["377"],["378"],"'compose' is defined but never used.","'firestoreConnect' is defined but never used.","'Link' is defined but never used.","'postRef' is assigned a value but never used.","'description' is assigned a value but never used.","'apply' is assigned a value but never used.","'title' is assigned a value but never used.","'role' is assigned a value but never used.","'responsabilities' is assigned a value but never used.","'qualifications' is assigned a value but never used.",["377"],["378"],"'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'firebase' is assigned a value but never used.","'companyRef' is assigned a value but never used.","'headquarters' is assigned a value but never used.","'industry' is assigned a value but never used.","'name' is assigned a value but never used.","'size' is assigned a value but never used.","'website' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ubbLogo' is defined but never used.",["377"],["378"],"no-global-assign","no-unsafe-negation",[749,750],"",[918,919]]