[{"C:\\Users\\dumar\\marketplace\\src\\components\\Navbar.js":"1","C:\\Users\\dumar\\marketplace\\src\\components\\FilterBar.js":"2","C:\\Users\\dumar\\marketplace\\src\\App.js":"3","C:\\Users\\dumar\\marketplace\\src\\components\\HomePage.js":"4","C:\\Users\\dumar\\marketplace\\src\\components\\JobBoardComponent.js":"5","C:\\Users\\dumar\\marketplace\\src\\components\\SignIn.js":"6","C:\\Users\\dumar\\marketplace\\src\\components\\SignUp.js":"7","C:\\Users\\dumar\\marketplace\\src\\components\\JobPost.js":"8","C:\\Users\\dumar\\marketplace\\src\\components\\CreatePost.js":"9","C:\\Users\\dumar\\marketplace\\src\\components\\SignedInLinks.js":"10","C:\\Users\\dumar\\marketplace\\src\\components\\Home.js":"11","C:\\Users\\dumar\\marketplace\\src\\components\\SignedOutLinks.js":"12","C:\\Users\\dumar\\marketplace\\src\\index.js":"13","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\rootReducer.js":"14","C:\\Users\\dumar\\marketplace\\src\\config\\fbConfig.js":"15","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\authReducer.js":"16","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\postsReducer.js":"17","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\postsActions.js":"18","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\companiesReducer.js":"19","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\authActions.js":"20","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\categoriesReducer.js":"21","C:\\Users\\dumar\\marketplace\\src\\components\\LandingPage.js":"22","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\classificationsReducer.js":"23","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\technologiesReducer.js":"24","C:\\Users\\dumar\\marketplace\\src\\components\\MyPosts.js":"25","C:\\Users\\dumar\\marketplace\\src\\components\\EditPost.js":"26","C:\\Users\\dumar\\marketplace\\src\\components\\Profile.js":"27","C:\\Users\\dumar\\marketplace\\src\\components\\AppSettings.js":"28","C:\\Users\\dumar\\marketplace\\src\\components\\Partners.js":"29","C:\\Users\\dumar\\marketplace\\src\\components\\CompanyPostComponent.js":"30","C:\\Users\\dumar\\marketplace\\src\\components\\AddCompany.js":"31","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\companiesAction.js":"32","C:\\Users\\dumar\\marketplace\\src\\components\\EditCompany.js":"33","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\categoriesActions.js":"34","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\toolsReducer.js":"35","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\toolsActions.js":"36","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\techonolgiesActions.js":"37","C:\\Users\\dumar\\marketplace\\src\\components\\Notifications.js":"38","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\classificationActions.js":"39","C:\\Users\\dumar\\marketplace\\src\\components\\Pagination.js":"40"},{"size":1916,"mtime":1612015098273,"results":"41","hashOfConfig":"42"},{"size":4827,"mtime":1612366462073,"results":"43","hashOfConfig":"42"},{"size":1994,"mtime":1612129993915,"results":"44","hashOfConfig":"42"},{"size":448,"mtime":1607779819607,"results":"45","hashOfConfig":"42"},{"size":5348,"mtime":1611735648871,"results":"46","hashOfConfig":"42"},{"size":3370,"mtime":1612369511826,"results":"47","hashOfConfig":"42"},{"size":5565,"mtime":1612369367185,"results":"48","hashOfConfig":"42"},{"size":9072,"mtime":1612105025940,"results":"49","hashOfConfig":"42"},{"size":14820,"mtime":1612105678364,"results":"50","hashOfConfig":"42"},{"size":8442,"mtime":1612364120485,"results":"51","hashOfConfig":"42"},{"size":6339,"mtime":1612367150921,"results":"52","hashOfConfig":"42"},{"size":955,"mtime":1609330258154,"results":"53","hashOfConfig":"42"},{"size":938,"mtime":1610818494195,"results":"54","hashOfConfig":"42"},{"size":878,"mtime":1612215618713,"results":"55","hashOfConfig":"42"},{"size":623,"mtime":1609704218727,"results":"56","hashOfConfig":"42"},{"size":1037,"mtime":1610816574402,"results":"57","hashOfConfig":"42"},{"size":1701,"mtime":1612100401355,"results":"58","hashOfConfig":"42"},{"size":6808,"mtime":1612292175456,"results":"59","hashOfConfig":"42"},{"size":736,"mtime":1612127218896,"results":"60","hashOfConfig":"42"},{"size":1918,"mtime":1611071215737,"results":"61","hashOfConfig":"42"},{"size":627,"mtime":1612215137341,"results":"62","hashOfConfig":"42"},{"size":4320,"mtime":1611426994334,"results":"63","hashOfConfig":"42"},{"size":690,"mtime":1612215438586,"results":"64","hashOfConfig":"42"},{"size":651,"mtime":1612215243586,"results":"65","hashOfConfig":"42"},{"size":2550,"mtime":1612362837911,"results":"66","hashOfConfig":"42"},{"size":16589,"mtime":1612107000884,"results":"67","hashOfConfig":"42"},{"size":9093,"mtime":1611646745082,"results":"68","hashOfConfig":"42"},{"size":25300,"mtime":1612218313004,"results":"69","hashOfConfig":"42"},{"size":1928,"mtime":1612128272479,"results":"70","hashOfConfig":"42"},{"size":4919,"mtime":1612192496298,"results":"71","hashOfConfig":"42"},{"size":5103,"mtime":1612191412464,"results":"72","hashOfConfig":"42"},{"size":2151,"mtime":1612127796544,"results":"73","hashOfConfig":"42"},{"size":7257,"mtime":1612191377611,"results":"74","hashOfConfig":"42"},{"size":1145,"mtime":1612214842714,"results":"75","hashOfConfig":"42"},{"size":561,"mtime":1612215546881,"results":"76","hashOfConfig":"42"},{"size":1126,"mtime":1612216793133,"results":"77","hashOfConfig":"42"},{"size":1181,"mtime":1612214106346,"results":"78","hashOfConfig":"42"},{"size":1090,"mtime":1612363180351,"results":"79","hashOfConfig":"42"},{"size":1227,"mtime":1612214501693,"results":"80","hashOfConfig":"42"},{"size":843,"mtime":1612362739451,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"hi92i9",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dumar\\marketplace\\src\\components\\Navbar.js",["180","181","182","183","184","185"],"import React from 'react';\r\nimport backG from '../try.jpg';\r\nimport avatar from '../avatar.jpg'\r\nimport ubbAvatar from '../ubb.png';\r\nimport '../css/Navbar.css';\r\nimport FilterBar from './FilterBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Dropdown from 'react-dropdown';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n\r\n        var  options = ['Job, Internship, Project'];\r\n        var defaultOption = options[0];\r\n        //if uid exists then user exists and is logged in => navbar shows SignedIn Links else SignedOut Links\r\n        const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n        return(\r\n            <nav id=\"header\" className=\"w-full flex flex-wrap top-10 py-1 bg-blue-800 shadow-2xl justify-between pt-2\" >\r\n                <div className='flex my-2'>\r\n                    <div className=\"flex px-8 \">\r\n                        <Link to='/home' >\r\n                            <div className=\"hidden md:flex md:items-center md:w-auto w-full order-3 md:order-1 \" id=\"menu\">\r\n                                    <img className=\"w-12 h-12 bg-white ml-auto mr-2 rounded-full\" src={ubbAvatar} />\r\n                                    <span className='mr-1 text-xl text-red-600 mb-1 font-bold '>UBB</span>\r\n                                    <span className='text-xl text-blue-400 mb-1'>Marketplace</span>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    {links}\r\n                </div>\r\n            </nav>\r\n            \r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\n",["186","187"],"C:\\Users\\dumar\\marketplace\\src\\components\\FilterBar.js",[],"C:\\Users\\dumar\\marketplace\\src\\App.js",["188","189","190","191"],"C:\\Users\\dumar\\marketplace\\src\\components\\HomePage.js",[],["192","193"],"C:\\Users\\dumar\\marketplace\\src\\components\\JobBoardComponent.js",["194","195","196"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignIn.js",["197"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignUp.js",[],"C:\\Users\\dumar\\marketplace\\src\\components\\JobPost.js",["198","199","200","201","202"],"C:\\Users\\dumar\\marketplace\\src\\components\\CreatePost.js",["203"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createPost } from '../store/actions/postsActions';\r\nimport { Redirect } from 'react-router';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport firebase from '../config/fbConfig';\r\nimport '../App.css';\r\n\r\nclass CreatePost extends React.Component {\r\n\r\n    state = {\r\n        company: '',\r\n        location: '',\r\n        contract: '',\r\n        description: '',\r\n        apply: '',\r\n        title: '',\r\n        role : '',\r\n        classification : '',\r\n        technologies: [],\r\n        tools: [],\r\n        responsabilities: '',\r\n        qualifications: '',    \r\n        dataTools : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.multiselectRef = React.createRef();\r\n     \r\n    }\r\n\r\n    resetValues() {\r\n        // By calling the belowe method will reset the selected values programatically\r\n        this.multiselectRef.current.resetSelectedValues();\r\n      }\r\n\r\n    setTools = (technology) => {\r\n        const ref = firebase.firestore().collection('tools');\r\n        let setToolsArray = [];\r\n        ref.where(\"relatedTech\", \"==\", technology ).onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                //setToolsArray.push(doc.data());\r\n                this.setState({\r\n                    dataTools : [ ...this.state.dataTools, doc.data()]\r\n                });\r\n            })\r\n        });\r\n\r\n\r\n        if(setToolsArray){\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    removeTools = (technology) =>{\r\n        let updatedArray = this.state.dataTools.filter(item => item.relatedTech !== technology.id);\r\n        this.setState({\r\n            dataTools : updatedArray\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        if(e.target.id === 'title'){\r\n            this.setState({\r\n                company: this.props.company.name\r\n            })\r\n        }\r\n        if(e.target.value !== ' '){\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    }\r\n\r\n    handleAddTechnologies = (selectedList, selectedItem) => { \r\n            this.setTools(selectedItem.id);\r\n            this.setState({\r\n                technologies: [...this.state.technologies, selectedItem]\r\n            });     \r\n      \r\n    }\r\n\r\n    handleAddTools = (selectedList,selectedItem) => {\r\n        this.setState({\r\n            tools: [...this.state.tools, selectedItem]\r\n        });\r\n        \r\n       \r\n    }\r\n\r\n    handleRemoveTechnologies = (selectedList, removedItem) => {\r\n       \r\n        this.removeTools(removedItem);\r\n        let updatedArray = this.state.technologies.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            technologies: updatedArray\r\n        });\r\n        this.multiselectRef.current.resetSelectedValues();\r\n        \r\n    }\r\n\r\n    handleRemoveTools = (selectedList, removedItem) => {\r\n        let updatedArray = this.state.tools.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            tools: updatedArray\r\n        });\r\n        \r\n    }\r\n\r\n   \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // We pass the post we want to create which is the state of the component after we submit the form\r\n        this.props.createPost(this.state);\r\n        this.props.history.push('/myPosts');\r\n    }\r\n\r\n    render() {\r\n        const { auth, classifications, technologies, profile, company } = this.props;\r\n        let dataTechnologies = [];\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        // create technology options for multiselect\r\n        // if(technologies.length !== 0){\r\n        //     technologies.forEach(technology => {\r\n        //        const object = {Technology: technology.language, id: technology.id}\r\n        //        dataTechnologies.push(object);\r\n        //     })\r\n        // }\r\n\r\n        const styles = {\r\n            multiselectContainer: { \r\n\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                borderRadius: \"0.25rem\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                borderColor: \"rgba(229, 231, 235, var(--tw-border-opacity))\"\r\n\r\n            },\r\n            searchBox: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\"\r\n             },\r\n             optionContainer: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                marginBottom: \"0.9rem\"\r\n             }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {/* Create title and description div */}\r\n                <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                    <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Create Post</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form className=\"mx-18 p-5\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"grid grid-cols-6 gap-4\">\r\n                        {/* Form on the left side */}\r\n                        <div className=\"col-start-2 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"block text-lg font-semibold  text-gray-00\" for=\"name\">Name</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" value={profile.firstName + \" \"+ profile.lastName} id=\"name\"  type=\"text\" placeholder=\"Your Name\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <label className=\"block text-lg font-semibold  text-sm text-gray-00\" for=\"company\">Company</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" id=\"company\" value={company.name} type=\"text\" required=\"\" placeholder=\"Company\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"location\">Location</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' onChange={this.handleChange} id=\"location\" placeholder='Location' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"contract\">Contract</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' onChange={this.handleChange} id=\"contract\" >\r\n                                        <option hidden value=\"\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Contract Type</option>\r\n                                        <option value=\"Full-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Full-Time</option>\r\n                                        <option value=\"Part-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Part-Time</option>\r\n                                        <option value=\"Other\"className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Description</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"description\" placeholder='Describe your post...' />\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>How to apply?</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"apply\" placeholder='How to apply?' />\r\n                                </div>\r\n                                <div className=\"mt-4 flex justify-center\">\r\n                                    <button className=\"w-full mx-5 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-1 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                        C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                        C15.952,9,16,9.447,16,10z\" />\r\n                                        </svg>\r\n                                        Post\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/*Part of the Form on the right side */}\r\n                        <div className=\"col-start-4 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Job Title</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' onChange={this.handleChange} placeholder='Job Title' id=\"title\" />\r\n                                </div>\r\n                                \r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Role</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' onChange={this.handleChange} placeholder='Role' id=\"role\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Classification</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' onChange={this.handleChange} id=\"classification\" placeholder='Classification' >\r\n                                        <option hidden value=\"\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Select category</option>\r\n                                        {classifications.length === 0 ? (<option ></option>) : (classifications.map( classification =>(\r\n                                            <option value={classification.id}>{classification.name}</option>\r\n                                        )\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Technologies</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={technologies} placeholder=\"Choose technolgies\" displayValue=\"language\" onSelect={this.handleAddTechnologies} onRemove={this.handleRemoveTechnologies} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Tools</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={this.state.dataTools} placeholder=\"Choose one/more tools\" displayValue=\"name\" onSelect={this.handleAddTools} onRemove={this.handleAddTools} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Responsabilites</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"responsabilities\" onChange={this.handleChange} placeholder='Responsabilities' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Qualifications</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"qualifications\" onChange={this.handleChange} placeholder='Qualifications' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const profile = state.firebase.profile;\r\n    const allCompanies =  profile ? (state.firestore.ordered.companies) : ([]);\r\n    const company = allCompanies ? (state.firestore.ordered.companies.filter(company => company.id === profile.company)) : ([]);\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        classifications: state.firestore.ordered.classifications || state.classification.classifications,\r\n        technologies: state.firestore.ordered.technologies || state.technology.technologies,\r\n        profile: profile,\r\n        company: company[0] || state.company.companies\r\n\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: (post) => dispatch(createPost(post))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n connect(mapStateToProps, mapDispatchToProps),\r\n firestoreConnect([\"classifications\", \"technologies\", \"companies\"])\r\n)(CreatePost);",["204","205"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignedInLinks.js",["206","207"],"C:\\Users\\dumar\\marketplace\\src\\components\\Home.js",["208","209","210","211","212"],"C:\\Users\\dumar\\marketplace\\src\\components\\SignedOutLinks.js",["213"],"import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div className='flex my-2 py-2 mx-2 '>\r\n            <div className='justify-center'>\r\n                <ul className=\"md:flex items-center justify-between text-base text-blue-600 pt-4 md:pt-0\">\r\n                    <li>\r\n                        <NavLink className=\"bg-red-600 text-white  px-9 py-2 rounded  hover:bg-blue-500 mx-2 hover:text-gray-100\" to='/signin'>Sign In</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink className=\"bg-transparent text-white  px-9 py-2 rounded border border-gray-300  mx-2 -2 hover:bg-gray-100 hover:text-gray-700\" to='/signup'>Sign Up</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(SignedOutLinks);\r\n",["214","215"],"C:\\Users\\dumar\\marketplace\\src\\index.js",[],["216","217"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\dumar\\marketplace\\src\\config\\fbConfig.js",[],["218","219"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\authReducer.js",["220","221"],"const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        default:\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ... state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ... state,\r\n                authError: action.err.message\r\n            }\r\n    }\r\n    \r\n};\r\n\r\nexport default authReducer;\r\n","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\postsReducer.js",["222"],"const initState = {\r\n    posts: [], \r\n    filteredPosts: [],\r\n    classificationFilter: '',\r\n    technologiesFilter: '',\r\n    searchFilter: '',\r\n    postErr: null\r\n};\r\n\r\nconst postsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_POST':\r\n            console.log('created post', action.post);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n        case 'UPDATE_POST':\r\n            return state;\r\n        case 'UPDATE_POST_ERROR':\r\n            return state;\r\n        case 'DELETE_POST':\r\n            return state;\r\n        case 'DELETE_POST_ERROR':\r\n            return state.filter((post) => post.id !== action.id);\r\n        case 'FILTER_BY_CLASSIFICATIONS_POSTS':\r\n            return { \r\n                ...state,\r\n                filteredPosts: action.payload.filteredPosts,\r\n                classificationFilter: action.payload.classification.value\r\n             };\r\n        case 'FILTER_BY_CLASSIFICATIONS_POSTS_ERROR':\r\n            return { \r\n                ...state,\r\n                postErr: action.err \r\n            };\r\n        case 'FILTER_BY_TECHNOLOGIES_POSTS':\r\n            return { \r\n                ...state,\r\n                filteredPosts: action.payload.filteredPosts,\r\n                technologiesFilter: action.payload.technology.value\r\n             };\r\n        case 'SEARCH_POSTS':\r\n            return { \r\n                ...state,\r\n                filteredPosts: action.payload.filteredPosts,\r\n                searchFilter: action.payload.searchTerm\r\n                 };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postsReducer;","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\postsActions.js",["223","224"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\companiesReducer.js",["225"],"const initState = {\r\n    companies: [],\r\n    \r\n};\r\n\r\nconst companiesReducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'ADD_COMPANY':\r\n            console.log('Company added', action.company);\r\n            return state;\r\n        case 'ADD_COMPANY_ERROR':\r\n            console.log('Company add error', action.err);\r\n        case 'UPDATE_COMPANY':\r\n            return state;\r\n        case 'UPDATE_COMPANY_ERROR':\r\n            return state;\r\n        case 'DELETE_COMPANY':\r\n            return state;\r\n        case 'DELETE_COMPANY_ERROR':\r\n            return state.filter((company) => company.id !== action.id);\r\n        default:\r\n            return state;\r\n}\r\n\r\n}\r\n\r\nexport default companiesReducer;","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\authActions.js",[],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\categoriesReducer.js",["226"],"C:\\Users\\dumar\\marketplace\\src\\components\\LandingPage.js",["227","228"],"import React from 'react';\r\nimport backG from '../header-wall.jpg';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport ubbLogo from '../ubbLogo.png';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nconst LandingPage = (props) => {\r\n    const { auth } = props;\r\n\r\n    if(auth.uid) return <Redirect to='/home' />;\r\n    return(  \r\n        <div className=\"grid grid-cols-2 text-white w-full h-full fixed ...\">\r\n             <div className=\"col-span-1 flex flex-wrap items-start justify-center bg-fixed bg-center bg-content bg-no-repeat \" style= {{ backgroundImage: `url('${backG}')` }}>\r\n                 <div className=\"mt-36 flex justify-center w-full\">\r\n                    <div className=\"items-center\">\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"h-8 w-8 fill-current text-red-600 ...\" >\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\">\r\n                                <span>Find Job Opportunities</span>\r\n                            </h1>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className=\"h-8 w-8 fill-current text-red-600 ...\" >\r\n                            <path d=\"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\"><span>Find Project Opportunities</span></h1>\r\n                        </div>\r\n                        <div className=\"flex my-4\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className=\"h-8 w-8 fill-current text-red-600 ...\">\r\n                            <path fillRule=\"evenodd\" d=\"M9 3a1 1 0 012 0v5.5a.5.5 0 001 0V4a1 1 0 112 0v4.5a.5.5 0 001 0V6a1 1 0 112 0v5a7 7 0 11-14 0V9a1 1 0 012 0v2.5a.5.5 0 001 0V4a1 1 0 012 0v4.5a.5.5 0 001 0V3z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                            <h1 className=\"font-bold text-3xl text-gray-800 ml-2\"><span>Find Collaboration Opportunities</span></h1>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n            {/* <img src={backG} alt=\"Mobile Phone\" className=\"w-1/2 object-content\"/> */}\r\n                <div className=\"col-span-1 flex justify-center  bg-blue-400\">\r\n                    <div className=\"w-full text-white flex md:justify-center text-center md:text-left p-52\">\r\n                        <div >\r\n                            <div className=\"flex justify-center\">\r\n                                <h2 className=\"leading-none font-bold text-2xl xs:text-2x1 text-red-600 md:text-4xl lg:6x1 \"><span className=\"text-blue-800\">Welcome to </span>UBB <span className=\"text-blue-800\">Marketplace</span></h2>\r\n                            </div>\r\n                            <div className=\"flex justify-center md:justify-center md:flex  my-12\">\r\n                                <img src={ubbLogo} alt=\"Mobile Phone\" className=\"mx-1\" />\r\n                            </div>\r\n                            <div className=\"flex justify-center\">\r\n                                <NavLink className=\"px-16 w-96 flex justify-center rounded-full bg-blue-800 text-white font-bold p-4 uppercase border-blue-500 border hover:bg-gray-100 hover:text-gray-700\" to='/signup'>\r\n                                    <span>Get started</span>\r\n                                </ NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\classificationsReducer.js",["229"],"const initState = {\r\n    classifications: []\r\n };\r\n \r\n const classificationsReducer = (state = initState, action) => {\r\n     switch (action.type) {\r\n         case 'ADD_CLASSIFICATION':\r\n             console.log('classification created', action.post);\r\n             return state;\r\n         case 'ADD_CLASSIFICATION_ERROR':\r\n             console.log('create classification error', action.err);\r\n         case 'DELETE_CLASSIFICATION':\r\n             return state.filter((classification) => classification.id !== action.id);\r\n         case 'DELETE_CLASSIFICATION_ERROR':\r\n             return state;\r\n         default:\r\n             return state; }\r\n }\r\n\r\nexport default classificationsReducer;\r\n","C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\technologiesReducer.js",["230"],"C:\\Users\\dumar\\marketplace\\src\\components\\MyPosts.js",["231"],"C:\\Users\\dumar\\marketplace\\src\\components\\EditPost.js",["232","233"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { updatePost } from '../store/actions/postsActions';\r\nimport { Redirect } from 'react-router';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport firebase from '../config/fbConfig';\r\nimport '../App.css';\r\n\r\nclass EditPost extends React.Component {\r\n\r\n    state = {\r\n        company: '',\r\n        location: '',\r\n        contract: '',\r\n        description: '',\r\n        apply: '',\r\n        title: '',\r\n        role : '',\r\n        qualifications:'',\r\n        classification : '',\r\n        technologies: [],\r\n        tools: [],\r\n        responsabilities: '',    \r\n        dataTools : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.multiselectRef = React.createRef();\r\n   \r\n\r\n        const pathname = this.props.location.pathname;\r\n        const splitPath = pathname.split('/');\r\n        const postId = splitPath[2];\r\n\r\n        const ref = firebase.firestore();\r\n        const postRef = ref.collection('posts').doc(postId).get().then( (doc) => {\r\n            \r\n\r\n                if(doc.exists){\r\n                const post = doc.data();\r\n\r\n                this.setState({\r\n                    company: post.company,\r\n                    location: post.location,\r\n                    contract: post.contract,\r\n                    description: post.description,\r\n                    apply: post.apply,\r\n                    title: post.title,\r\n                    role : post.role,\r\n                    classification : post.classification,\r\n                    technologies: post.technologies,\r\n                    tools: post.tools,\r\n                    responsabilities: post.responsabilities,\r\n                    qualifications: post.qualifications\r\n                }); }\r\n        \r\n\r\n        }); \r\n     \r\n    }\r\n\r\n    resetValues() {\r\n        // By calling the belowe method will reset the selected values programatically\r\n        this.multiselectRef.current.resetSelectedValues();\r\n      }\r\n\r\n    setTools = (technology) => {\r\n        const ref = firebase.firestore().collection('tools');\r\n        let setToolsArray = [];\r\n        ref.where(\"relatedTech\", \"==\", technology ).onSnapshot((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                //setToolsArray.push(doc.data());\r\n                this.setState({\r\n                    dataTools : [ ...this.state.dataTools, doc.data()]\r\n                });\r\n            })\r\n        });\r\n\r\n\r\n        if(setToolsArray){\r\n            \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    removeTools = (technology) =>{\r\n        let updatedArray = this.state.dataTools.filter(item => item.relatedTech !== technology.id);\r\n        this.setState({\r\n            dataTools : updatedArray\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if(e.target.value !== ' '){\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    }\r\n\r\n    handleAddTechnologies = (selectedList, selectedItem) => { \r\n            this.setTools(selectedItem.id);\r\n            this.setState({\r\n                technologies: [...this.state.technologies, selectedItem]\r\n            });     \r\n      \r\n    }\r\n\r\n    handleAddTools = (selectedList,selectedItem) => {\r\n        this.setState({\r\n            tools: [...this.state.tools, selectedItem]\r\n        });\r\n        \r\n       \r\n    }\r\n\r\n    handleRemoveTechnologies = (selectedList, removedItem) => {\r\n       \r\n        this.removeTools(removedItem);\r\n        let updatedArray = this.state.technologies.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            technologies: updatedArray\r\n        });\r\n        this.multiselectRef.current.resetSelectedValues();\r\n        \r\n    }\r\n\r\n    handleRemoveTools = (selectedList, removedItem) => {\r\n        let updatedArray = this.state.tools.filter(item => item.id !== removedItem.id);\r\n        this.setState({\r\n            tools: updatedArray\r\n        });\r\n        \r\n    }\r\n\r\n   \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const pathname = this.props.location.pathname;\r\n        const splitPath = pathname.split('/');\r\n        const postId = splitPath[2];\r\n        // We pass the post we want to create which is the state of the component after we submit the form\r\n        this.props.updatePost(this.state, postId);\r\n        this.props.history.push('/myPosts');\r\n    }\r\n\r\n    render() {\r\n        const { auth, post, profile, classifications } = this.props;\r\n        const allTechnologies = this.props.technologies;\r\n        const { company, location, contract, description, apply, title, role, classification, technologies, tools, responsabilities, qualifications } = post.length !== 0 ? post[0]: {};\r\n        let dataTechnologies = [];\r\n\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        const styles = {\r\n            multiselectContainer: { \r\n\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                borderRadius: \"0.25rem\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                borderColor: \"rgba(229, 231, 235, var(--tw-border-opacity))\"\r\n\r\n            },\r\n            searchBox: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\"\r\n             },\r\n             optionContainer: {\r\n                backgroundColor: \"rgba(229, 231, 235, var(--tw-bg-opacity))\",\r\n                text: \"rgba(55, 65, 81, var(--tw-bg-opacity))\",\r\n                marginBottom: \"0.9rem\"\r\n             }\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {/* Create title and description div */}\r\n                <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                    <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Edit Post</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <form className=\"mx-18 p-5\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"grid grid-cols-6 gap-4\">\r\n                        {/* Form on the left side */}\r\n                        <div className=\"col-start-2 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"block text-lg font-semibold  text-gray-00\" for=\"name\">Name</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" defaultValue={profile.firstName + \" \"+ profile.lastName} id=\"name\"  type=\"text\" placeholder=\"Your Name\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <label className=\"block text-lg font-semibold  text-sm text-gray-00\" for=\"company\">Company</label>\r\n                                    <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100\" id=\"company\" defaultValue={company} type=\"text\" required=\"\" placeholder=\"Company\" disabled=\"true\" aria-label=\"Name\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"location\">Location</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' defaultValue={location}  onChange={this.handleChange} id=\"location\" placeholder='Location' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00' for=\"contract\">Contract</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' value={contract} onChange={this.handleChange} id=\"contract\" >\r\n                                        <option hidden value=\"\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Contract Type</option>\r\n                                        <option value=\"Full-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Full-Time</option>\r\n                                        <option value=\"Part-Time\" className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Part-Time</option>\r\n                                        <option value=\"Other\"className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Description</label>\r\n                                    <textarea defaultValue={description} className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"description\" placeholder='Describe your post...' />\r\n                                </div>\r\n                                <div className='mt-7'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>How to apply?</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' defaultValue={apply} cols=\"10\" rows=\"20\" onChange={this.handleChange} autoComplete=\"off\" id=\"apply\" placeholder='How to apply?' />\r\n                                </div>\r\n                                <div className=\"mt-4 flex justify-center\">\r\n                                    <button className=\"w-full mx-5 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-3 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M17.561,2.439c-1.442-1.443-2.525-1.227-2.525-1.227L8.984,7.264L2.21,14.037L1.2,18.799l4.763-1.01\r\n                                        l6.774-6.771l6.052-6.052C18.788,4.966,19.005,3.883,17.561,2.439z M5.68,17.217l-1.624,0.35c-0.156-0.293-0.345-0.586-0.69-0.932\r\n                                        c-0.346-0.346-0.639-0.533-0.932-0.691l0.35-1.623l0.47-0.469c0,0,0.883,0.018,1.881,1.016c0.997,0.996,1.016,1.881,1.016,1.881\r\n                                        L5.68,17.217z\"/>\r\n                                        </svg>\r\n                                        Edit Post\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/*Part of the Form on the right side */}\r\n                        <div className=\"col-start-4 col-span-2\">\r\n                            <div className='mr-10'>\r\n                                <div className=\"mt-2\">\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Job Title</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' defaultValue={title} onChange={this.handleChange} placeholder='Job Title' id=\"title\" />\r\n                                </div>\r\n                                \r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Role</label>\r\n                                    <input className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded hover:bg-gray-100' defaultValue={role} onChange={this.handleChange} placeholder='Role' id=\"role\" />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Classification</label>\r\n                                    <select className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded' onChange={this.handleChange} id=\"classification\" placeholder='Classification' >\r\n                                        <option hidden value={classification} className='w-full px-2 py-1 text-gray-700 bg-gray-200 rounded'>Select category</option>\r\n                                        {classifications.length === 0 ? (<option ></option>) : (classifications.map( classification =>(\r\n                                            <option value={classification.id}>{classification.name}</option>\r\n                                        )\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Technologies</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={allTechnologies} selectedValues={technologies} placeholder=\"Choose technolgies\" displayValue=\"language\" onSelect={this.handleAddTechnologies} onRemove={this.handleRemoveTechnologies} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Tools</label>\r\n                                    <Multiselect ref={this.multiselectRef} style={styles} options={this.state.dataTools} selectedValues={tools} placeholder=\"Choose one/more tools\" displayValue=\"name\" onSelect={this.handleAddTools} onRemove={this.handleAddTools} />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Responsabilites</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' defaultValue={responsabilities} cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"responsabilities\" onChange={this.handleChange} placeholder='Responsabilities' />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label className='block text-lg font-semibold  text-gray-00'>Qualifications</label>\r\n                                    <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' defaultValue={qualifications} cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"qualifications\" onChange={this.handleChange} placeholder='Qualifications' />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const profile = state.firebase.profile;\r\n  //  const allCompanies =  profile ? (state.firestore.ordered.companies) : ([]);\r\n    //const company = allCompanies ? (state.firestore.ordered.companies.filter(company => company.id === profile.company)) : ([]);\r\n\r\n    const pathname = ownProps.location.pathname;\r\n    const splitPath = pathname.split('/');\r\n    const postId = splitPath[2];\r\n\r\n    return {\r\n        postId: postId,\r\n        auth: state.firebase.auth,\r\n        classifications: state.firestore.ordered.classifications || state.classification.classifications,\r\n        technologies: state.firestore.ordered.technologies || state.technology.technologies,\r\n        profile: profile,\r\n        post: state.firestore.ordered.posts || []\r\n        //company: company[0] || state.company.companies\r\n\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePost: (post, postId) => dispatch(updatePost(post, postId))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n connect(mapStateToProps, mapDispatchToProps),\r\n firestoreConnect((props) => [\r\n     {\r\n         collection: 'posts',\r\n         doc: props.postId,\r\n     },\r\n    {collection: \"classifications\"}, \r\n    {collection: \"technologies\"}, \r\n     //{collection: \"companies\"}\r\n ])\r\n)(EditPost);","C:\\Users\\dumar\\marketplace\\src\\components\\Profile.js",["234","235"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass Profile extends React.Component{\r\n\r\n    render(){\r\n        const { profile, auth } = this.props;\r\n        return(\r\n        <div className=\" grid grid-cols-3\">\r\n             <div className='col-start-1 col-span-3 bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n                        <div className='bg-blue-600 bg-transparent bg-opacity-30 '>\r\n                        <div className='ml-80 py-20' >\r\n                            <span className='text-4xl fond-bold'>Profile</span>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            <div className=\"col-start-2 col-span-1\">\r\n                <form className=\"w-full\">\r\n                <div className=\"flex justify-center w-full\">\r\n                                <div className=\"rounded-full bg-gradient-to-r from-green-400 to-blue-500 ... text-2xl font-bold p-10  cursor-pointer focus:outline-none\" onClick={() => this.handleDropdown()} >\r\n                                    RD\r\n                                </div>\r\n                            </div>\r\n                    <div className=\"md:inline-flex space-y-4 md:space-y-0 w-full p-4 text-gray-500 items-center\">\r\n                        <h2 className=\"md:w-1/3 max-w-sm mx-auto\">Account</h2>\r\n                        <div className=\"md:w-2/3 max-w-sm mx-auto\">\r\n                        <label className=\"text-sm text-gray-400\">Email</label>\r\n                        <div className=\"w-full inline-flex border rounded\">\r\n                            <div className=\"pt-2 w-1/12 bg-gray-100 bg-opacity-50\">\r\n                            <svg\r\n                                fill=\"none\"\r\n                                className=\"w-6 text-gray-400 mx-auto\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                            >\r\n                                <path\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                stroke-width=\"2\"\r\n                                d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                                />\r\n                            </svg>\r\n                            </div>\r\n                            <input\r\n                            type=\"email\"\r\n                            value={auth.email}\r\n                            className=\"w-11/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                            placeholder=\"email@example.com\"\r\n                            disabled\r\n                            />\r\n                        </div>\r\n                        </div>\r\n                 </div>\r\n\r\n                    <div className=\"md:inline-flex  space-y-4 md:space-y-0  w-full p-4 text-gray-500 items-center\">\r\n                        <h2 className=\"md:w-1/3 mx-auto max-w-sm\">Personal info</h2>\r\n                        <div className=\"md:w-2/3 mx-auto max-w-sm space-y-5\">\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-400\">Name</label>\r\n                            <div className=\"flex\">\r\n                                <div className=\"w-full mr-6 inline-flex border rounded\">\r\n                                <div className=\"w-2/12 pt-2 bg-gray-100\">\r\n                                    <svg\r\n                                    fill=\"none\"\r\n                                    className=\"w-5 text-gray-400 mx-auto\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                    >\r\n                                    <path\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        stroke-width=\"2\"\r\n                                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                                    />\r\n                                    </svg>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={profile.firstName}\r\n                                    className=\"w-10/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n                                </div>\r\n                                <div className=\"w-full inline-flex border rounded\">\r\n                                <div className=\"w-2/12 pt-2 bg-gray-100\">\r\n                                    <svg\r\n                                    fill=\"none\"\r\n                                    className=\"w-5 text-gray-400 mx-auto\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                    >\r\n                                    <path\r\n                                        stroke-linecap=\"round\"\r\n                                        stroke-linejoin=\"round\"\r\n                                        stroke-width=\"2\"\r\n                                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\r\n                                    />\r\n                                    </svg>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={profile.lastName}\r\n                                    className=\"w-10/12 focus:outline-none focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                    placeholder=\"Last Name\"\r\n                                />\r\n                                </div>\r\n                            </div> \r\n                        </div>\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-400\">Phone number</label>\r\n                            <div className=\"w-full inline-flex   border rounded\">\r\n                            <div className=\"pt-2 w-1/12 bg-gray-100 \">\r\n                                <svg\r\n                                fill=\"none\"\r\n                                className=\"w-6 text-gray-400 mx-auto\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"currentColor\"\r\n                                >\r\n                                <path\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                    stroke-width=\"2\"\r\n                                    d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"\r\n                                />\r\n                                </svg>\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"w-11/12 focus:outline-none  focus:text-gray-600 p-2 text-gray-700 bg-gray-200 hover:bg-gray-100\"\r\n                                placeholder=\"12341234\"\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-full flex justify-center mt-20\">\r\n                        <button className=\"w-64 mx-20 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                        <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-3 inline-block\">\r\n                                        <path fill=\"#FFFFFF\" d=\"M17.561,2.439c-1.442-1.443-2.525-1.227-2.525-1.227L8.984,7.264L2.21,14.037L1.2,18.799l4.763-1.01\r\n                                        l6.774-6.771l6.052-6.052C18.788,4.966,19.005,3.883,17.561,2.439z M5.68,17.217l-1.624,0.35c-0.156-0.293-0.345-0.586-0.69-0.932\r\n                                        c-0.346-0.346-0.639-0.533-0.932-0.691l0.35-1.623l0.47-0.469c0,0,0.883,0.018,1.881,1.016c0.997,0.996,1.016,1.881,1.016,1.881\r\n                                        L5.68,17.217z\"/>\r\n                                        </svg>\r\n                                        Update Profile\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        profile: state.firebase.profile,\r\n        auth: state.firebase.auth\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);","C:\\Users\\dumar\\marketplace\\src\\components\\AppSettings.js",["236","237"],"C:\\Users\\dumar\\marketplace\\src\\components\\Partners.js",["238"],"C:\\Users\\dumar\\marketplace\\src\\components\\CompanyPostComponent.js",[],"C:\\Users\\dumar\\marketplace\\src\\components\\AddCompany.js",["239"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\companiesAction.js",["240"],"C:\\Users\\dumar\\marketplace\\src\\components\\EditCompany.js",["241","242","243","244","245","246","247"],"import React from 'react';\r\nimport background from '../jobBack.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { updateCompany } from '../store/actions/companiesAction';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router';\r\nimport firebase from '../config/fbConfig';\r\n\r\nclass EditCompany extends React.Component{\r\n\r\n    state = {\r\n        name: '',\r\n        headquarters: '',\r\n        industry: '',\r\n        size: '',\r\n        website: '',\r\n        description: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        const pathname = this.props.location.pathname;\r\n        const splitPath = pathname.split('/');\r\n        const companyId = splitPath[2];\r\n\r\n        const ref = firebase.firestore();\r\n        const companyRef = ref.collection('companies').doc(companyId).get().then( (doc) => {\r\n            \r\n\r\n                if(doc.exists){\r\n                const company = doc.data();\r\n\r\n                this.setState({\r\n                    description: company.description,\r\n                    headquarters: company.headquarters,\r\n                    industry: company.industry,\r\n                    name: company.name,\r\n                    size: company.size,\r\n                    website: company.website\r\n                }); }\r\n        \r\n\r\n        }); \r\n     \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if(e.target.value !== ' '){\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const pathname = this.props.location.pathname;\r\n        const splitPath = pathname.split('/');\r\n        const companyId = splitPath[2];\r\n        // We pass the post we want to create which is the state of the component after we submit the form\r\n        this.props.updateCompany(this.state, companyId);\r\n        this.props.history.push('/partners');\r\n    }\r\n\r\n    render(){\r\n        const { auth, companies } = this.props;\r\n        const { description, headquarters, industry, name, size, website} = companies.length !== 0 ? companies[0]: {};\r\n\r\n        console.log(this.state);\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return(\r\n    <div>\r\n            <div className='bg-cover bg-center' style= {{ backgroundImage: `url('${background}')` }}>\r\n            <div className='bg-blue-600 bg-transparent bg-opacity-30'>\r\n                <div className='ml-80 py-20' >\r\n                    <span className='text-4xl fond-bold'>Add Company</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"grid grid-cols-6 gap-4\">\r\n                <div className=\"col-start-3 col-end-5 max-w-xl m-4 p-10 bg-white rounded shadow-xl\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <p className=\"text-gray-800 text-2xl my-4 font-medium\">Company Information</p>\r\n                        <div className=\"\">\r\n                            <label className=\"block text-sm text-gray-00\" for=\"cus_name\">Name</label>\r\n                            <input className=\"w-full px-2 py-1 text-gray-700 bg-gray-200 rounded\" defaultValue={this.state.name} id=\"name\" onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Company Name\"/>\r\n                        </div>\r\n                        <div class=\"mt-2\">\r\n                            <label className=\"block text-sm text-gray-600\" for=\"cus_email\">Headquarters Location</label>\r\n                            <input className=\"w-full px-2  py-2 text-gray-700 bg-gray-200 rounded\" defaultValue={this.state.headquarters} id=\"headquarters\" onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Headquarters\" />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className=\" block text-sm text-gray-600\" for=\"cus_email\">Industry</label>\r\n                            <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" id=\"industry\" defaultValue={this.state.industry} onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Industry\" />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"text-sm block text-gray-600\" for=\"cus_email\">Size</label>\r\n                            <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" id=\"size\" defaultValue={this.state.size} onChange={this.handleChange} type=\"text\" required=\"\" placeholder=\"Size\"/>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className=\"block text-sm text-gray-600\" for=\"cus_email\">Website</label>\r\n                            <input className=\"w-full px-2 py-2 text-gray-700 bg-gray-200 rounded\" id=\"website\" defaultValue={this.state.website} onChange={this.handleChange}  type=\"text\" required=\"\" placeholder=\"Website\" />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <label className='block text-lg font-semibold  text-gray-00'>Description</label>\r\n                            <textarea className='w-full h-44 px-2 py-1 text-gray-700 bg-gray-200 hover:bg-gray-100 rounded' defaultValue={this.state.description} cols=\"10\" rows=\"20\"  autoComplete=\"off\" id=\"description\" onChange={this.handleChange} placeholder='Description' />\r\n                        </div>\r\n                        <div className=\"mt-2 flex justiy-center\">\r\n                            <button onClick={this.handleSubmit} className=\"w-full mx-5 py-3 text-white font-light tracking-wider bg-red-600 rounded\" type=\"submit\">\r\n                                <svg viewBox=\"0 0 20 20\" enable-background=\"new 0 0 20 20\" class=\"w-6 h-6 mr-1 inline-block\">\r\n                                <path fill=\"#FFFFFF\" d=\"M16,10c0,0.553-0.048,1-0.601,1H11v4.399C11,15.951,10.553,16,10,16c-0.553,0-1-0.049-1-0.601V11H4.601\r\n                                    C4.049,11,4,10.553,4,10c0-0.553,0.049-1,0.601-1H9V4.601C9,4.048,9.447,4,10,4c0.553,0,1,0.048,1,0.601V9h4.399\r\n                                    C15.952,9,16,9.447,16,10z\" />\r\n                                </svg>\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    const pathname = ownProps.location.pathname;\r\n    const splitPath = pathname.split('/');\r\n    const companyId = splitPath[2];\r\n\r\n    return {\r\n        companyId: companyId,\r\n        auth: state.firebase.auth,\r\n        companies: state.firestore.ordered.companies || []\r\n        //company: company[0] || state.company.companies\r\n\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCompany: (company, companyId) => dispatch(updateCompany(company, companyId))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect((props) => [\r\n        {\r\n            collection: 'companies',\r\n            doc: props.companyId,\r\n        },\r\n    ])\r\n)(EditCompany);","C:\\Users\\dumar\\marketplace\\src\\store\\actions\\categoriesActions.js",["248"],"C:\\Users\\dumar\\marketplace\\src\\store\\reducers\\toolsReducer.js",["249"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\toolsActions.js",["250"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\techonolgiesActions.js",["251"],"import { constants } from \"react-redux-firebase\";\r\n\r\nexport const addTechnology = (technology) => {\r\n    // because we added withExtraagument to thunk in index.js, we can now pass one more Argument to the thunk return statement\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n\r\n        const { language } = technology;\r\n    \r\n        firestore.collection('technologies').add({\r\n            language\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_TECHNOLOGY', technology });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'ADD_TECHNOLOGY_ERROR', err})\r\n        });\r\n       \r\n    };\r\n};\r\n\r\n\r\nexport const deleteTechnology = (technology) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('technologies').doc(technology.id).delete().then(\r\n            () => {\r\n                dispatch({ type: 'DELETE_TECHNOLOGY', technology});\r\n            }\r\n        ).catch((err) => {\r\n            dispatch({ type: 'DELETE_TECHNOLOGY_ERROR', err})\r\n        });\r\n    };\r\n};\r\n","C:\\Users\\dumar\\marketplace\\src\\components\\Notifications.js",["252","253"],"C:\\Users\\dumar\\marketplace\\src\\store\\actions\\classificationActions.js",["254"],"C:\\Users\\dumar\\marketplace\\src\\components\\Pagination.js",["255"],{"ruleId":"256","severity":1,"message":"257","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":13},{"ruleId":"256","severity":1,"message":"260","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"261","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":17},{"ruleId":"256","severity":1,"message":"262","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":16},{"ruleId":"256","severity":1,"message":"263","line":17,"column":13,"nodeType":"258","messageId":"259","endLine":17,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":26,"column":37,"nodeType":"266","endLine":26,"endColumn":117},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"256","severity":1,"message":"271","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":25},{"ruleId":"256","severity":1,"message":"272","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":16},{"ruleId":"256","severity":1,"message":"261","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":17},{"ruleId":"256","severity":1,"message":"273","line":12,"column":8,"nodeType":"258","messageId":"259","endLine":12,"endColumn":15},{"ruleId":"267","replacedBy":"274"},{"ruleId":"269","replacedBy":"275"},{"ruleId":"256","severity":1,"message":"257","line":2,"column":8,"nodeType":"258","messageId":"259","endLine":2,"endColumn":13},{"ruleId":"256","severity":1,"message":"276","line":5,"column":19,"nodeType":"258","messageId":"259","endLine":5,"endColumn":27},{"ruleId":"256","severity":1,"message":"277","line":41,"column":15,"nodeType":"258","messageId":"259","endLine":41,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":34,"column":67,"nodeType":"266","endLine":34,"endColumn":133},{"ruleId":"256","severity":1,"message":"278","line":18,"column":39,"nodeType":"258","messageId":"259","endLine":18,"endColumn":47},{"ruleId":"256","severity":1,"message":"279","line":18,"column":72,"nodeType":"258","messageId":"259","endLine":18,"endColumn":85},{"ruleId":"256","severity":1,"message":"280","line":18,"column":87,"nodeType":"258","messageId":"259","endLine":18,"endColumn":99},{"ruleId":"256","severity":1,"message":"281","line":18,"column":101,"nodeType":"258","messageId":"259","endLine":18,"endColumn":106},{"ruleId":"264","severity":1,"message":"265","line":51,"column":33,"nodeType":"266","endLine":51,"endColumn":76},{"ruleId":"256","severity":1,"message":"282","line":128,"column":13,"nodeType":"258","messageId":"259","endLine":128,"endColumn":29},{"ruleId":"267","replacedBy":"283"},{"ruleId":"269","replacedBy":"284"},{"ruleId":"256","severity":1,"message":"285","line":2,"column":19,"nodeType":"258","messageId":"259","endLine":2,"endColumn":29},{"ruleId":"286","severity":1,"message":"287","line":115,"column":29,"nodeType":"266","endLine":115,"endColumn":193},{"ruleId":"256","severity":1,"message":"288","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"289","line":1,"column":27,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"290","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":12},{"ruleId":"256","severity":1,"message":"257","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":13},{"ruleId":"256","severity":1,"message":"291","line":77,"column":29,"nodeType":"258","messageId":"259","endLine":77,"endColumn":37},{"ruleId":"256","severity":1,"message":"292","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":21},{"ruleId":"267","replacedBy":"293"},{"ruleId":"269","replacedBy":"294"},{"ruleId":"267","replacedBy":"295"},{"ruleId":"269","replacedBy":"296"},{"ruleId":"267","replacedBy":"297"},{"ruleId":"269","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":28,"column":20,"nodeType":"301","messageId":"302","endLine":28,"endColumn":21,"fix":"303"},{"ruleId":"299","severity":1,"message":"300","line":34,"column":20,"nodeType":"301","messageId":"302","endLine":34,"endColumn":21,"fix":"304"},{"ruleId":"305","severity":1,"message":"306","line":17,"column":9,"nodeType":"307","messageId":"308","endLine":18,"endColumn":26},{"ruleId":"256","severity":1,"message":"309","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"256","severity":1,"message":"310","line":108,"column":15,"nodeType":"258","messageId":"259","endLine":108,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":14,"column":9,"nodeType":"307","messageId":"308","endLine":15,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":12,"column":10,"nodeType":"307","messageId":"308","endLine":13,"endColumn":75},{"ruleId":"256","severity":1,"message":"311","line":6,"column":10,"nodeType":"258","messageId":"259","endLine":6,"endColumn":17},{"ruleId":"256","severity":1,"message":"312","line":7,"column":10,"nodeType":"258","messageId":"259","endLine":7,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":12,"column":10,"nodeType":"307","messageId":"308","endLine":13,"endColumn":87},{"ruleId":"305","severity":1,"message":"306","line":12,"column":10,"nodeType":"307","messageId":"308","endLine":13,"endColumn":79},{"ruleId":"256","severity":1,"message":"313","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":14},{"ruleId":"256","severity":1,"message":"314","line":39,"column":15,"nodeType":"258","messageId":"259","endLine":39,"endColumn":22},{"ruleId":"256","severity":1,"message":"282","line":157,"column":13,"nodeType":"258","messageId":"259","endLine":157,"endColumn":29},{"ruleId":"256","severity":1,"message":"312","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":26},{"ruleId":"256","severity":1,"message":"311","line":5,"column":10,"nodeType":"258","messageId":"259","endLine":5,"endColumn":17},{"ruleId":"256","severity":1,"message":"315","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":382,"column":36,"nodeType":"318","messageId":"319","endLine":382,"endColumn":38},{"ruleId":"256","severity":1,"message":"313","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"256","severity":1,"message":"312","line":6,"column":10,"nodeType":"258","messageId":"259","endLine":6,"endColumn":26},{"ruleId":"256","severity":1,"message":"309","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"256","severity":1,"message":"320","line":27,"column":15,"nodeType":"258","messageId":"259","endLine":27,"endColumn":25},{"ruleId":"256","severity":1,"message":"321","line":67,"column":17,"nodeType":"258","messageId":"259","endLine":67,"endColumn":28},{"ruleId":"256","severity":1,"message":"322","line":67,"column":30,"nodeType":"258","messageId":"259","endLine":67,"endColumn":42},{"ruleId":"256","severity":1,"message":"323","line":67,"column":44,"nodeType":"258","messageId":"259","endLine":67,"endColumn":52},{"ruleId":"256","severity":1,"message":"324","line":67,"column":54,"nodeType":"258","messageId":"259","endLine":67,"endColumn":58},{"ruleId":"256","severity":1,"message":"325","line":67,"column":60,"nodeType":"258","messageId":"259","endLine":67,"endColumn":64},{"ruleId":"256","severity":1,"message":"326","line":67,"column":66,"nodeType":"258","messageId":"259","endLine":67,"endColumn":73},{"ruleId":"256","severity":1,"message":"309","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"305","severity":1,"message":"306","line":12,"column":9,"nodeType":"307","messageId":"308","endLine":13,"endColumn":66},{"ruleId":"256","severity":1,"message":"309","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"256","severity":1,"message":"309","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"256","severity":1,"message":"315","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":17},{"ruleId":"286","severity":1,"message":"327","line":12,"column":25,"nodeType":"266","endLine":12,"endColumn":106},{"ruleId":"256","severity":1,"message":"309","line":1,"column":10,"nodeType":"258","messageId":"259","endLine":1,"endColumn":19},{"ruleId":"286","severity":1,"message":"327","line":15,"column":25,"nodeType":"266","endLine":15,"endColumn":102},"no-unused-vars","'backG' is defined but never used.","Identifier","unusedVar","'avatar' is defined but never used.","'FilterBar' is defined but never used.","'Dropdown' is defined but never used.","'defaultOption' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["328"],"no-negated-in-lhs",["329"],"'JobBoardComponent' is defined but never used.","'HomePage' is defined but never used.","'Landing' is defined but never used.",["328"],["329"],"'Redirect' is defined but never used.","'db' is assigned a value but never used.","'contract' is assigned a value but never used.","'cassification' is assigned a value but never used.","'technologies' is assigned a value but never used.","'tools' is assigned a value but never used.","'dataTechnologies' is assigned a value but never used.",["328"],["329"],"'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is defined but never used.","'location' is assigned a value but never used.","'SignedInLinks' is defined but never used.",["328"],["329"],["328"],["329"],["328"],["329"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"330","text":"331"},{"range":"332","text":"331"},"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'constants' is defined but never used.","'state' is assigned a value but never used.","'compose' is defined but never used.","'firestoreConnect' is defined but never used.","'Link' is defined but never used.","'postRef' is assigned a value but never used.","'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'companyRef' is assigned a value but never used.","'description' is assigned a value but never used.","'headquarters' is assigned a value but never used.","'industry' is assigned a value but never used.","'name' is assigned a value but never used.","'size' is assigned a value but never used.","'website' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[749,750],"",[918,919]]